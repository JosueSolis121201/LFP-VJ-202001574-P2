
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftoperador_ORleftoperador_ANDleftoperador_igualacionoperador_diferenciacionleftoperador_menoroperador_menor_igualoperador_mayoroperador_mayor_igualleftoperador_sumaoperador_restaleftoperador_multiplicacionoperador_restorightoperador_NOTcoma comentario_multilinea comentario_unilinea corchete_abre corchete_cierra dato_boolean_false dato_boolean_true dato_char dato_double dato_string dos_puntos id llave_abre llave_cierra numero operador_AND operador_NOT operador_OR operador_diferenciacion operador_divicion operador_igual operador_igualacion operador_mayor operador_mayor_igual operador_menor operador_menor_igual operador_multiplicacion operador_resta operador_resto operador_suma parentesis_abre parentesis_cierra punto punto_coma reservada_break reservada_continue reservada_do reservada_else reservada_fin reservada_if reservada_inicio reservada_return reservada_void reservada_while tipo_boolean tipo_char tipo_double tipo_int tipo_string\n      S0 : INITIAL\n    \n    INITIAL : INITIAL ESTRUCTURA\n    \n    INITIAL : ESTRUCTURA\n    \n    ESTRUCTURA : PRODIF_ELSE\n               | PRODIF\n               | PRODDO_WHILE\n               | PRODWHILE\n               | PRODVOID\n               | PRODFUNCION\n                 \n    \n    PRODDO_WHILE : reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma\n    \n    PRODWHILE : reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO \n    \n    PRODIF_ELSE : reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO\n    \n    PRODIF : reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    PRODVOID : reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    PRODFUNCION : TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    OPERACION : OPERACION operador_suma OPERACION\n            |   OPERACION operador_resta OPERACION\n            |   OPERACION operador_multiplicacion OPERACION\n            |   OPERACION operador_divicion OPERACION\n            |   OPERACION operador_resto OPERACION\n            |   OPERACION operador_igualacion OPERACION\n            |   OPERACION operador_diferenciacion OPERACION\n            |   OPERACION operador_mayor OPERACION\n            |   OPERACION operador_mayor_igual OPERACION\n            |   OPERACION operador_menor OPERACION\n            |   OPERACION operador_menor_igual OPERACION\n            |   OPERACION operador_AND OPERACION\n            |   OPERACION operador_OR OPERACION\n            |   OPERACION operador_NOT OPERACION\n            |   OPERACION operador_igual OPERACION\n            |   numero\n    \n    INSTRUCCIONES : DECLARACION\n                  | ASINGACION\n                  | PRODIF_ELSE\n                  | PRODIF\n                  | PRODDO_WHILE\n                  | PRODWHILE\n                  | PRODVOID\n                  \n    \n    DECLARACION : TIPO_DATO id operador_igual DATO punto_coma\n    \n    ASINGACION : id operador_igual DATO punto_coma\n    \n  TIPO_DATO : tipo_int \n            | tipo_double\n            | tipo_string\n            | tipo_char\n            | tipo_boolean\n  \n  \n  DATO : numero \n          | dato_double\n          | dato_string\n          | dato_char\n          | dato_boolean_true\n          | dato_boolean_false\n  \n    PARAMETRO : TIPO_DATO id\n    \n    PARAMETROS :  PARAMETROS coma PARAMETRO \n               | PARAMETRO\n               | \n    \n    OPERACION_FACTORIZADO : parentesis_abre OPERACION parentesis_cierra\n    \n    INSTRUCCIONES_FACTORIZADO : llave_abre INSTRUCCIONES llave_cierra\n    \n    PARAMETROS_FACTORIZADO : parentesis_abre PARAMETROS parentesis_cierra\n    '
    
_lr_action_items = {'reservada_if':([0,2,3,4,5,6,7,8,9,20,24,28,42,64,67,71,72,88,],[10,10,-3,-4,-5,-6,-7,-8,-9,-2,10,-13,-11,-57,-14,-15,-12,-10,]),'reservada_do':([0,2,3,4,5,6,7,8,9,20,24,28,42,64,67,71,72,88,],[11,11,-3,-4,-5,-6,-7,-8,-9,-2,11,-13,-11,-57,-14,-15,-12,-10,]),'reservada_while':([0,2,3,4,5,6,7,8,9,20,23,24,28,42,64,67,71,72,88,],[12,12,-3,-4,-5,-6,-7,-8,-9,-2,31,12,-13,-11,-57,-14,-15,-12,-10,]),'reservada_void':([0,2,3,4,5,6,7,8,9,20,24,28,42,64,67,71,72,88,],[13,13,-3,-4,-5,-6,-7,-8,-9,-2,13,-13,-11,-57,-14,-15,-12,-10,]),'tipo_int':([0,2,3,4,5,6,7,8,9,20,24,28,42,44,64,67,71,72,88,98,],[15,15,-3,-4,-5,-6,-7,-8,-9,-2,15,-13,-11,15,-57,-14,-15,-12,-10,15,]),'tipo_double':([0,2,3,4,5,6,7,8,9,20,24,28,42,44,64,67,71,72,88,98,],[16,16,-3,-4,-5,-6,-7,-8,-9,-2,16,-13,-11,16,-57,-14,-15,-12,-10,16,]),'tipo_string':([0,2,3,4,5,6,7,8,9,20,24,28,42,44,64,67,71,72,88,98,],[17,17,-3,-4,-5,-6,-7,-8,-9,-2,17,-13,-11,17,-57,-14,-15,-12,-10,17,]),'tipo_char':([0,2,3,4,5,6,7,8,9,20,24,28,42,44,64,67,71,72,88,98,],[18,18,-3,-4,-5,-6,-7,-8,-9,-2,18,-13,-11,18,-57,-14,-15,-12,-10,18,]),'tipo_boolean':([0,2,3,4,5,6,7,8,9,20,24,28,42,44,64,67,71,72,88,98,],[19,19,-3,-4,-5,-6,-7,-8,-9,-2,19,-13,-11,19,-57,-14,-15,-12,-10,19,]),'$end':([1,2,3,4,5,6,7,8,9,20,28,42,64,67,71,72,88,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-2,-13,-11,-57,-14,-15,-12,-10,]),'parentesis_abre':([10,12,26,27,31,],[22,22,44,44,22,]),'llave_abre':([11,21,25,43,45,46,47,97,],[24,24,24,24,24,24,-56,-58,]),'id':([13,14,15,16,17,18,19,24,40,70,],[26,27,-41,-42,-43,-44,-45,41,65,99,]),'numero':([22,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,89,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,91,91,]),'reservada_else':([28,64,],[46,-57,]),'llave_cierra':([28,32,33,34,35,36,37,38,39,42,64,67,72,88,101,103,],[-13,64,-32,-33,-34,-35,-36,-37,-38,-11,-57,-14,-12,-10,-40,-39,]),'parentesis_cierra':([29,30,44,68,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,99,102,],[47,-31,-55,97,-54,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-52,-53,]),'operador_suma':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[48,-31,-16,-17,-18,48,-20,48,48,48,48,48,48,48,48,-29,48,]),'operador_resta':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[49,-31,-16,-17,-18,49,-20,49,49,49,49,49,49,49,49,-29,49,]),'operador_multiplicacion':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[50,-31,50,50,-18,50,-20,50,50,50,50,50,50,50,50,-29,50,]),'operador_divicion':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[51,-31,-16,-17,-18,51,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,51,]),'operador_resto':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[52,-31,52,52,-18,52,-20,52,52,52,52,52,52,52,52,-29,52,]),'operador_igualacion':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[53,-31,-16,-17,-18,53,-20,-21,-22,-23,-24,-25,-26,53,53,-29,53,]),'operador_diferenciacion':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[54,-31,-16,-17,-18,54,-20,-21,-22,-23,-24,-25,-26,54,54,-29,54,]),'operador_mayor':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[55,-31,-16,-17,-18,55,-20,55,55,-23,-24,-25,-26,55,55,-29,55,]),'operador_mayor_igual':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[56,-31,-16,-17,-18,56,-20,56,56,-23,-24,-25,-26,56,56,-29,56,]),'operador_menor':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[57,-31,-16,-17,-18,57,-20,57,57,-23,-24,-25,-26,57,57,-29,57,]),'operador_menor_igual':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[58,-31,-16,-17,-18,58,-20,58,58,-23,-24,-25,-26,58,58,-29,58,]),'operador_AND':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[59,-31,-16,-17,-18,59,-20,-21,-22,-23,-24,-25,-26,-27,59,-29,59,]),'operador_OR':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[60,-31,-16,-17,-18,60,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,60,]),'operador_NOT':([29,30,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[61,-31,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'operador_igual':([29,30,41,65,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,],[62,-31,66,89,-16,-17,-18,62,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,62,]),'coma':([44,68,69,99,102,],[-55,98,-54,-52,-53,]),'punto_coma':([47,63,90,91,92,93,94,95,96,100,],[-56,88,101,-46,-47,-48,-49,-50,-51,103,]),'dato_double':([66,89,],[92,92,]),'dato_string':([66,89,],[93,93,]),'dato_char':([66,89,],[94,94,]),'dato_boolean_true':([66,89,],[95,95,]),'dato_boolean_false':([66,89,],[96,96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S0':([0,],[1,]),'INITIAL':([0,],[2,]),'ESTRUCTURA':([0,2,],[3,20,]),'PRODIF_ELSE':([0,2,24,],[4,4,35,]),'PRODIF':([0,2,24,],[5,5,36,]),'PRODDO_WHILE':([0,2,24,],[6,6,37,]),'PRODWHILE':([0,2,24,],[7,7,38,]),'PRODVOID':([0,2,24,],[8,8,39,]),'PRODFUNCION':([0,2,],[9,9,]),'TIPO_DATO':([0,2,24,44,98,],[14,14,40,70,70,]),'OPERACION_FACTORIZADO':([10,12,31,],[21,25,63,]),'INSTRUCCIONES_FACTORIZADO':([11,21,25,43,45,46,],[23,28,42,67,71,72,]),'OPERACION':([22,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,],[29,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,]),'INSTRUCCIONES':([24,],[32,]),'DECLARACION':([24,],[33,]),'ASINGACION':([24,],[34,]),'PARAMETROS_FACTORIZADO':([26,27,],[43,45,]),'PARAMETROS':([44,],[68,]),'PARAMETRO':([44,98,],[69,102,]),'DATO':([66,89,],[90,100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S0","S'",1,None,None,None),
  ('S0 -> INITIAL','S0',1,'p_S0','lexico.py',238),
  ('INITIAL -> INITIAL ESTRUCTURA','INITIAL',2,'p_INITIAL_RECURSIVO','lexico.py',243),
  ('INITIAL -> ESTRUCTURA','INITIAL',1,'p_INITIAL_INICIAL','lexico.py',249),
  ('ESTRUCTURA -> PRODIF_ELSE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',255),
  ('ESTRUCTURA -> PRODIF','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',256),
  ('ESTRUCTURA -> PRODDO_WHILE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',257),
  ('ESTRUCTURA -> PRODWHILE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',258),
  ('ESTRUCTURA -> PRODVOID','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',259),
  ('ESTRUCTURA -> PRODFUNCION','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',260),
  ('PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma','PRODDO_WHILE',5,'p_ESTRUCTURA_PRODDO_WHILE','lexico.py',267),
  ('PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODWHILE',3,'p_ESTRUCTURA_PRODWHILE','lexico.py',273),
  ('PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO','PRODIF_ELSE',5,'p_ESTRUCTURA_IF_ELSE','lexico.py',279),
  ('PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODIF',3,'p_ESTRUCTURA_IF','lexico.py',285),
  ('PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODVOID',4,'p_ESTRUCTURA_VOID','lexico.py',291),
  ('PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODFUNCION',4,'p_ESTRUCTURA_FUNCION','lexico.py',297),
  ('OPERACION -> OPERACION operador_suma OPERACION','OPERACION',3,'p_OPERACION','lexico.py',304),
  ('OPERACION -> OPERACION operador_resta OPERACION','OPERACION',3,'p_OPERACION','lexico.py',305),
  ('OPERACION -> OPERACION operador_multiplicacion OPERACION','OPERACION',3,'p_OPERACION','lexico.py',306),
  ('OPERACION -> OPERACION operador_divicion OPERACION','OPERACION',3,'p_OPERACION','lexico.py',307),
  ('OPERACION -> OPERACION operador_resto OPERACION','OPERACION',3,'p_OPERACION','lexico.py',308),
  ('OPERACION -> OPERACION operador_igualacion OPERACION','OPERACION',3,'p_OPERACION','lexico.py',309),
  ('OPERACION -> OPERACION operador_diferenciacion OPERACION','OPERACION',3,'p_OPERACION','lexico.py',310),
  ('OPERACION -> OPERACION operador_mayor OPERACION','OPERACION',3,'p_OPERACION','lexico.py',311),
  ('OPERACION -> OPERACION operador_mayor_igual OPERACION','OPERACION',3,'p_OPERACION','lexico.py',312),
  ('OPERACION -> OPERACION operador_menor OPERACION','OPERACION',3,'p_OPERACION','lexico.py',313),
  ('OPERACION -> OPERACION operador_menor_igual OPERACION','OPERACION',3,'p_OPERACION','lexico.py',314),
  ('OPERACION -> OPERACION operador_AND OPERACION','OPERACION',3,'p_OPERACION','lexico.py',315),
  ('OPERACION -> OPERACION operador_OR OPERACION','OPERACION',3,'p_OPERACION','lexico.py',316),
  ('OPERACION -> OPERACION operador_NOT OPERACION','OPERACION',3,'p_OPERACION','lexico.py',317),
  ('OPERACION -> OPERACION operador_igual OPERACION','OPERACION',3,'p_OPERACION','lexico.py',318),
  ('OPERACION -> numero','OPERACION',1,'p_OPERACION','lexico.py',319),
  ('INSTRUCCIONES -> DECLARACION','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',323),
  ('INSTRUCCIONES -> ASINGACION','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',324),
  ('INSTRUCCIONES -> PRODIF_ELSE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',325),
  ('INSTRUCCIONES -> PRODIF','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',326),
  ('INSTRUCCIONES -> PRODDO_WHILE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',327),
  ('INSTRUCCIONES -> PRODWHILE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',328),
  ('INSTRUCCIONES -> PRODVOID','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',329),
  ('DECLARACION -> TIPO_DATO id operador_igual DATO punto_coma','DECLARACION',5,'p_DECLARACIONES','lexico.py',336),
  ('ASINGACION -> id operador_igual DATO punto_coma','ASINGACION',4,'p_ASIGNACION','lexico.py',341),
  ('TIPO_DATO -> tipo_int','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',346),
  ('TIPO_DATO -> tipo_double','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',347),
  ('TIPO_DATO -> tipo_string','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',348),
  ('TIPO_DATO -> tipo_char','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',349),
  ('TIPO_DATO -> tipo_boolean','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',350),
  ('DATO -> numero','DATO',1,'p_DATO','lexico.py',357),
  ('DATO -> dato_double','DATO',1,'p_DATO','lexico.py',358),
  ('DATO -> dato_string','DATO',1,'p_DATO','lexico.py',359),
  ('DATO -> dato_char','DATO',1,'p_DATO','lexico.py',360),
  ('DATO -> dato_boolean_true','DATO',1,'p_DATO','lexico.py',361),
  ('DATO -> dato_boolean_false','DATO',1,'p_DATO','lexico.py',362),
  ('PARAMETRO -> TIPO_DATO id','PARAMETRO',2,'p_PARAMETRO_DEFINICION','lexico.py',368),
  ('PARAMETROS -> PARAMETROS coma PARAMETRO','PARAMETROS',3,'p_PARAMETROS_RECURSIVO','lexico.py',373),
  ('PARAMETROS -> PARAMETRO','PARAMETROS',1,'p_PARAMETROS_RECURSIVO','lexico.py',374),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_PARAMETROS_RECURSIVO','lexico.py',375),
  ('OPERACION_FACTORIZADO -> parentesis_abre OPERACION parentesis_cierra','OPERACION_FACTORIZADO',3,'p_FACTORIZACION_OPERACION','lexico.py',380),
  ('INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra','INSTRUCCIONES_FACTORIZADO',3,'p_FACTORIZACION_INSTRUCCIONES','lexico.py',385),
  ('PARAMETROS_FACTORIZADO -> parentesis_abre PARAMETROS parentesis_cierra','PARAMETROS_FACTORIZADO',3,'p_FACTORIZACION_PARAMETROS','lexico.py',390),
]
