
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftoperador_ORleftoperador_ANDleftoperador_igualacionoperador_diferenciacionleftoperador_menoroperador_menor_igualoperador_mayoroperador_mayor_igualleftoperador_sumaoperador_restaleftoperador_multiplicacionoperador_restorightoperador_NOTcoma comentario_multilinea comentario_unilinea corchete_abre corchete_cierra dato_boolean_false dato_boolean_true dato_char dato_double dato_string dos_puntos id llave_abre llave_cierra numero operador_AND operador_NOT operador_OR operador_diferenciacion operador_divicion operador_igual operador_igualacion operador_mayor operador_mayor_igual operador_menor operador_menor_igual operador_multiplicacion operador_resta operador_resto operador_suma parentesis_abre parentesis_cierra punto punto_coma reservada_break reservada_continue reservada_do reservada_else reservada_fin reservada_if reservada_inicio reservada_return reservada_void reservada_while tipo_boolean tipo_char tipo_double tipo_int tipo_string\n      S0 : INITIAL\n    \n    INITIAL : INITIAL ESTRUCTURA\n    \n    INITIAL : ESTRUCTURA\n    \n    ESTRUCTURA : PRODIF_ELSE\n               | PRODIF\n               | PRODDO_WHILE\n               | PRODWHILE\n               | PRODVOID\n               | PRODFUNCION\n                 \n    \n    PRODDO_WHILE : reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma\n    \n    PRODWHILE : reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO \n    \n    PRODIF_ELSE : reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO\n    \n    PRODIF : reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    PRODVOID : reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    PRODFUNCION : TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    OPERACION : OPERACION operador_suma OPERACION\n            |   OPERACION operador_resta OPERACION\n            |   OPERACION operador_multiplicacion OPERACION\n            |   OPERACION operador_divicion OPERACION\n            |   OPERACION operador_resto OPERACION\n            |   OPERACION operador_igualacion OPERACION\n            |   OPERACION operador_diferenciacion OPERACION\n            |   OPERACION operador_mayor OPERACION\n            |   OPERACION operador_mayor_igual OPERACION\n            |   OPERACION operador_menor OPERACION\n            |   OPERACION operador_menor_igual OPERACION\n            |   OPERACION operador_AND OPERACION\n            |   OPERACION operador_OR OPERACION\n            |   OPERACION operador_NOT OPERACION\n            |   OPERACION operador_igual OPERACION\n            |   numero\n    \n    INSTRUCCIONES : DECLARACION\n                  | ASINGACION\n                  | PRODIF_ELSE\n                  | PRODIF\n                  | PRODDO_WHILE\n                  | PRODWHILE\n                  | PRODVOID\n                  | RETURN\n                  | BREAK\n                  | CONTINUE\n                  | LLAMADA\n                  \n    \n    DECLARACION : TIPO_DATO id operador_igual DATO punto_coma\n    \n    ASINGACION : id operador_igual DATO punto_coma\n    \n  TIPO_DATO : tipo_int \n            | tipo_double\n            | tipo_string\n            | tipo_char\n            | tipo_boolean\n  \n  \n  DATO : numero \n          | dato_double\n          | dato_string\n          | dato_char\n          | dato_boolean_true\n          | dato_boolean_false\n  \n    PARAMETRO : TIPO_DATO id\n    \n    PARAMETROS :  PARAMETROS coma PARAMETRO \n               | PARAMETRO\n               | \n    \n    LLAMADA : id parentesis_abre ARGUMENTOS parentesis_cierra\n    \n    ARGUMENTOS :  ARGUMENTOS coma ARGUMENTO \n               | ARGUMENTO\n               | \n     \n    ARGUMENTO :  DATO\n    \n    RETURN : reservada_return punto_coma \n           | reservada_return DATO punto_coma \n    \n    BREAK : reservada_break punto_coma \n    \n    CONTINUE : reservada_continue punto_coma \n    \n    OPERACION_FACTORIZADO : parentesis_abre OPERACION parentesis_cierra\n    \n    INSTRUCCIONES_FACTORIZADO : llave_abre INSTRUCCIONES llave_cierra\n    \n    PARAMETROS_FACTORIZADO : parentesis_abre PARAMETROS parentesis_cierra\n    '
    
_lr_action_items = {'reservada_if':([0,2,3,4,5,6,7,8,9,20,24,28,49,71,85,89,90,106,],[10,10,-3,-4,-5,-6,-7,-8,-9,-2,10,-13,-11,-70,-14,-15,-12,-10,]),'reservada_do':([0,2,3,4,5,6,7,8,9,20,24,28,49,71,85,89,90,106,],[11,11,-3,-4,-5,-6,-7,-8,-9,-2,11,-13,-11,-70,-14,-15,-12,-10,]),'reservada_while':([0,2,3,4,5,6,7,8,9,20,23,24,28,49,71,85,89,90,106,],[12,12,-3,-4,-5,-6,-7,-8,-9,-2,31,12,-13,-11,-70,-14,-15,-12,-10,]),'reservada_void':([0,2,3,4,5,6,7,8,9,20,24,28,49,71,85,89,90,106,],[13,13,-3,-4,-5,-6,-7,-8,-9,-2,13,-13,-11,-70,-14,-15,-12,-10,]),'tipo_int':([0,2,3,4,5,6,7,8,9,20,24,28,49,51,71,85,89,90,106,114,],[15,15,-3,-4,-5,-6,-7,-8,-9,-2,15,-13,-11,15,-70,-14,-15,-12,-10,15,]),'tipo_double':([0,2,3,4,5,6,7,8,9,20,24,28,49,51,71,85,89,90,106,114,],[16,16,-3,-4,-5,-6,-7,-8,-9,-2,16,-13,-11,16,-70,-14,-15,-12,-10,16,]),'tipo_string':([0,2,3,4,5,6,7,8,9,20,24,28,49,51,71,85,89,90,106,114,],[17,17,-3,-4,-5,-6,-7,-8,-9,-2,17,-13,-11,17,-70,-14,-15,-12,-10,17,]),'tipo_char':([0,2,3,4,5,6,7,8,9,20,24,28,49,51,71,85,89,90,106,114,],[18,18,-3,-4,-5,-6,-7,-8,-9,-2,18,-13,-11,18,-70,-14,-15,-12,-10,18,]),'tipo_boolean':([0,2,3,4,5,6,7,8,9,20,24,28,49,51,71,85,89,90,106,114,],[19,19,-3,-4,-5,-6,-7,-8,-9,-2,19,-13,-11,19,-70,-14,-15,-12,-10,19,]),'$end':([1,2,3,4,5,6,7,8,9,20,28,49,71,85,89,90,106,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-2,-13,-11,-70,-14,-15,-12,-10,]),'parentesis_abre':([10,12,26,27,31,45,],[22,22,51,51,22,74,]),'llave_abre':([11,21,25,50,52,53,54,113,],[24,24,24,24,24,24,-69,-71,]),'id':([13,14,15,16,17,18,19,24,44,88,],[26,27,-45,-46,-47,-48,-49,45,72,115,]),'numero':([22,46,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,107,119,],[30,77,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,77,77,77,77,]),'reservada_return':([24,],[46,]),'reservada_break':([24,],[47,]),'reservada_continue':([24,],[48,]),'reservada_else':([28,71,],[53,-70,]),'llave_cierra':([28,32,33,34,35,36,37,38,39,40,41,42,43,49,71,75,83,84,85,90,106,112,117,118,121,],[-13,71,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-11,-70,-65,-67,-68,-14,-12,-10,-66,-44,-60,-43,]),'parentesis_cierra':([29,30,51,74,77,78,79,80,81,82,86,87,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,109,110,111,115,120,122,],[54,-31,-59,-63,-50,-51,-52,-53,-54,-55,113,-58,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,118,-62,-64,-56,-57,-61,]),'operador_suma':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[55,-31,-16,-17,-18,55,-20,55,55,55,55,55,55,55,55,-29,55,]),'operador_resta':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[56,-31,-16,-17,-18,56,-20,56,56,56,56,56,56,56,56,-29,56,]),'operador_multiplicacion':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[57,-31,57,57,-18,57,-20,57,57,57,57,57,57,57,57,-29,57,]),'operador_divicion':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[58,-31,-16,-17,-18,58,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,58,]),'operador_resto':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[59,-31,59,59,-18,59,-20,59,59,59,59,59,59,59,59,-29,59,]),'operador_igualacion':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[60,-31,-16,-17,-18,60,-20,-21,-22,-23,-24,-25,-26,60,60,-29,60,]),'operador_diferenciacion':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[61,-31,-16,-17,-18,61,-20,-21,-22,-23,-24,-25,-26,61,61,-29,61,]),'operador_mayor':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[62,-31,-16,-17,-18,62,-20,62,62,-23,-24,-25,-26,62,62,-29,62,]),'operador_mayor_igual':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[63,-31,-16,-17,-18,63,-20,63,63,-23,-24,-25,-26,63,63,-29,63,]),'operador_menor':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[64,-31,-16,-17,-18,64,-20,64,64,-23,-24,-25,-26,64,64,-29,64,]),'operador_menor_igual':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[65,-31,-16,-17,-18,65,-20,65,65,-23,-24,-25,-26,65,65,-29,65,]),'operador_AND':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[66,-31,-16,-17,-18,66,-20,-21,-22,-23,-24,-25,-26,-27,66,-29,66,]),'operador_OR':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[67,-31,-16,-17,-18,67,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,67,]),'operador_NOT':([29,30,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[68,-31,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'operador_igual':([29,30,45,72,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,],[69,-31,73,107,-16,-17,-18,69,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,69,]),'punto_coma':([46,47,48,54,70,76,77,78,79,80,81,82,108,116,],[75,83,84,-69,106,112,-50,-51,-52,-53,-54,-55,117,121,]),'dato_double':([46,73,74,107,119,],[78,78,78,78,78,]),'dato_string':([46,73,74,107,119,],[79,79,79,79,79,]),'dato_char':([46,73,74,107,119,],[80,80,80,80,80,]),'dato_boolean_true':([46,73,74,107,119,],[81,81,81,81,81,]),'dato_boolean_false':([46,73,74,107,119,],[82,82,82,82,82,]),'coma':([51,74,77,78,79,80,81,82,86,87,109,110,111,115,120,122,],[-59,-63,-50,-51,-52,-53,-54,-55,114,-58,119,-62,-64,-56,-57,-61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S0':([0,],[1,]),'INITIAL':([0,],[2,]),'ESTRUCTURA':([0,2,],[3,20,]),'PRODIF_ELSE':([0,2,24,],[4,4,35,]),'PRODIF':([0,2,24,],[5,5,36,]),'PRODDO_WHILE':([0,2,24,],[6,6,37,]),'PRODWHILE':([0,2,24,],[7,7,38,]),'PRODVOID':([0,2,24,],[8,8,39,]),'PRODFUNCION':([0,2,],[9,9,]),'TIPO_DATO':([0,2,24,51,114,],[14,14,44,88,88,]),'OPERACION_FACTORIZADO':([10,12,31,],[21,25,70,]),'INSTRUCCIONES_FACTORIZADO':([11,21,25,50,52,53,],[23,28,49,85,89,90,]),'OPERACION':([22,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,],[29,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,]),'INSTRUCCIONES':([24,],[32,]),'DECLARACION':([24,],[33,]),'ASINGACION':([24,],[34,]),'RETURN':([24,],[40,]),'BREAK':([24,],[41,]),'CONTINUE':([24,],[42,]),'LLAMADA':([24,],[43,]),'PARAMETROS_FACTORIZADO':([26,27,],[50,52,]),'DATO':([46,73,74,107,119,],[76,108,111,116,111,]),'PARAMETROS':([51,],[86,]),'PARAMETRO':([51,114,],[87,120,]),'ARGUMENTOS':([74,],[109,]),'ARGUMENTO':([74,119,],[110,122,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S0","S'",1,None,None,None),
  ('S0 -> INITIAL','S0',1,'p_S0','lexico.py',238),
  ('INITIAL -> INITIAL ESTRUCTURA','INITIAL',2,'p_INITIAL_RECURSIVO','lexico.py',243),
  ('INITIAL -> ESTRUCTURA','INITIAL',1,'p_INITIAL_INICIAL','lexico.py',249),
  ('ESTRUCTURA -> PRODIF_ELSE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',255),
  ('ESTRUCTURA -> PRODIF','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',256),
  ('ESTRUCTURA -> PRODDO_WHILE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',257),
  ('ESTRUCTURA -> PRODWHILE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',258),
  ('ESTRUCTURA -> PRODVOID','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',259),
  ('ESTRUCTURA -> PRODFUNCION','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',260),
  ('PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma','PRODDO_WHILE',5,'p_ESTRUCTURA_PRODDO_WHILE','lexico.py',267),
  ('PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODWHILE',3,'p_ESTRUCTURA_PRODWHILE','lexico.py',273),
  ('PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO','PRODIF_ELSE',5,'p_ESTRUCTURA_IF_ELSE','lexico.py',279),
  ('PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODIF',3,'p_ESTRUCTURA_IF','lexico.py',285),
  ('PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODVOID',4,'p_ESTRUCTURA_VOID','lexico.py',291),
  ('PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODFUNCION',4,'p_ESTRUCTURA_FUNCION','lexico.py',297),
  ('OPERACION -> OPERACION operador_suma OPERACION','OPERACION',3,'p_OPERACION','lexico.py',304),
  ('OPERACION -> OPERACION operador_resta OPERACION','OPERACION',3,'p_OPERACION','lexico.py',305),
  ('OPERACION -> OPERACION operador_multiplicacion OPERACION','OPERACION',3,'p_OPERACION','lexico.py',306),
  ('OPERACION -> OPERACION operador_divicion OPERACION','OPERACION',3,'p_OPERACION','lexico.py',307),
  ('OPERACION -> OPERACION operador_resto OPERACION','OPERACION',3,'p_OPERACION','lexico.py',308),
  ('OPERACION -> OPERACION operador_igualacion OPERACION','OPERACION',3,'p_OPERACION','lexico.py',309),
  ('OPERACION -> OPERACION operador_diferenciacion OPERACION','OPERACION',3,'p_OPERACION','lexico.py',310),
  ('OPERACION -> OPERACION operador_mayor OPERACION','OPERACION',3,'p_OPERACION','lexico.py',311),
  ('OPERACION -> OPERACION operador_mayor_igual OPERACION','OPERACION',3,'p_OPERACION','lexico.py',312),
  ('OPERACION -> OPERACION operador_menor OPERACION','OPERACION',3,'p_OPERACION','lexico.py',313),
  ('OPERACION -> OPERACION operador_menor_igual OPERACION','OPERACION',3,'p_OPERACION','lexico.py',314),
  ('OPERACION -> OPERACION operador_AND OPERACION','OPERACION',3,'p_OPERACION','lexico.py',315),
  ('OPERACION -> OPERACION operador_OR OPERACION','OPERACION',3,'p_OPERACION','lexico.py',316),
  ('OPERACION -> OPERACION operador_NOT OPERACION','OPERACION',3,'p_OPERACION','lexico.py',317),
  ('OPERACION -> OPERACION operador_igual OPERACION','OPERACION',3,'p_OPERACION','lexico.py',318),
  ('OPERACION -> numero','OPERACION',1,'p_OPERACION','lexico.py',319),
  ('INSTRUCCIONES -> DECLARACION','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',323),
  ('INSTRUCCIONES -> ASINGACION','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',324),
  ('INSTRUCCIONES -> PRODIF_ELSE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',325),
  ('INSTRUCCIONES -> PRODIF','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',326),
  ('INSTRUCCIONES -> PRODDO_WHILE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',327),
  ('INSTRUCCIONES -> PRODWHILE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',328),
  ('INSTRUCCIONES -> PRODVOID','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',329),
  ('INSTRUCCIONES -> RETURN','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',330),
  ('INSTRUCCIONES -> BREAK','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',331),
  ('INSTRUCCIONES -> CONTINUE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',332),
  ('INSTRUCCIONES -> LLAMADA','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',333),
  ('DECLARACION -> TIPO_DATO id operador_igual DATO punto_coma','DECLARACION',5,'p_DECLARACIONES','lexico.py',340),
  ('ASINGACION -> id operador_igual DATO punto_coma','ASINGACION',4,'p_ASIGNACION','lexico.py',345),
  ('TIPO_DATO -> tipo_int','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',350),
  ('TIPO_DATO -> tipo_double','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',351),
  ('TIPO_DATO -> tipo_string','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',352),
  ('TIPO_DATO -> tipo_char','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',353),
  ('TIPO_DATO -> tipo_boolean','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',354),
  ('DATO -> numero','DATO',1,'p_DATO','lexico.py',361),
  ('DATO -> dato_double','DATO',1,'p_DATO','lexico.py',362),
  ('DATO -> dato_string','DATO',1,'p_DATO','lexico.py',363),
  ('DATO -> dato_char','DATO',1,'p_DATO','lexico.py',364),
  ('DATO -> dato_boolean_true','DATO',1,'p_DATO','lexico.py',365),
  ('DATO -> dato_boolean_false','DATO',1,'p_DATO','lexico.py',366),
  ('PARAMETRO -> TIPO_DATO id','PARAMETRO',2,'p_PARAMETRO_DEFINICION','lexico.py',372),
  ('PARAMETROS -> PARAMETROS coma PARAMETRO','PARAMETROS',3,'p_PARAMETROS_RECURSIVO','lexico.py',377),
  ('PARAMETROS -> PARAMETRO','PARAMETROS',1,'p_PARAMETROS_RECURSIVO','lexico.py',378),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_PARAMETROS_RECURSIVO','lexico.py',379),
  ('LLAMADA -> id parentesis_abre ARGUMENTOS parentesis_cierra','LLAMADA',4,'p_LLAMADA','lexico.py',384),
  ('ARGUMENTOS -> ARGUMENTOS coma ARGUMENTO','ARGUMENTOS',3,'p_ARGUMENTOS','lexico.py',389),
  ('ARGUMENTOS -> ARGUMENTO','ARGUMENTOS',1,'p_ARGUMENTOS','lexico.py',390),
  ('ARGUMENTOS -> <empty>','ARGUMENTOS',0,'p_ARGUMENTOS','lexico.py',391),
  ('ARGUMENTO -> DATO','ARGUMENTO',1,'p_ARGUMENTO','lexico.py',396),
  ('RETURN -> reservada_return punto_coma','RETURN',2,'p_RETURN','lexico.py',402),
  ('RETURN -> reservada_return DATO punto_coma','RETURN',3,'p_RETURN','lexico.py',403),
  ('BREAK -> reservada_break punto_coma','BREAK',2,'p_BREAK','lexico.py',408),
  ('CONTINUE -> reservada_continue punto_coma','CONTINUE',2,'p_CONTINUE','lexico.py',413),
  ('OPERACION_FACTORIZADO -> parentesis_abre OPERACION parentesis_cierra','OPERACION_FACTORIZADO',3,'p_FACTORIZACION_OPERACION','lexico.py',420),
  ('INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra','INSTRUCCIONES_FACTORIZADO',3,'p_FACTORIZACION_INSTRUCCIONES','lexico.py',425),
  ('PARAMETROS_FACTORIZADO -> parentesis_abre PARAMETROS parentesis_cierra','PARAMETROS_FACTORIZADO',3,'p_FACTORIZACION_PARAMETROS','lexico.py',430),
]
