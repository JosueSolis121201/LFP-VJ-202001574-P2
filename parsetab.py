
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftoperador_ORleftoperador_ANDleftoperador_igualacionoperador_diferenciacionleftoperador_menoroperador_menor_igualoperador_mayoroperador_mayor_igualleftoperador_sumaoperador_restaleftoperador_multiplicacionoperador_restorightoperador_NOTcoma comentario_multilinea comentario_unilinea corchete_abre corchete_cierra dato_boolean_false dato_boolean_true dato_char dato_double dato_string dos_puntos id llave_abre llave_cierra numero operador_AND operador_NOT operador_OR operador_diferenciacion operador_divicion operador_igual operador_igualacion operador_mayor operador_mayor_igual operador_menor operador_menor_igual operador_multiplicacion operador_resta operador_resto operador_suma parentesis_abre parentesis_cierra punto punto_coma reservada_break reservada_continue reservada_do reservada_else reservada_fin reservada_if reservada_inicio reservada_return reservada_void reservada_while tipo_boolean tipo_char tipo_double tipo_int tipo_string\n      S0 : INITIAL\n    \n    INITIAL : INITIAL ESTRUCTURA\n    \n    INITIAL : ESTRUCTURA\n    \n    ESTRUCTURA : PRODIF_ELSE\n               | PRODIF\n               | PRODDO_WHILE\n               | PRODWHILE\n               | PRODVOID\n               | PRODFUNCION\n               | DECLARACION\n               | LLAMADA\n               | ASINGACION\n               | RETURN\n               | BREAK\n               | CONTINUE\n                 \n    \n    PRODDO_WHILE : reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma\n    \n    PRODWHILE : reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO \n    \n    PRODIF_ELSE : reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO\n    \n    PRODIF : reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    PRODVOID : reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    PRODFUNCION : TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    OPERACIONES : OPERACIONES OPERACION\n    \n     OPERACIONES : OPERACION \n    \n    OPERACION : OPERACION operador_suma OPERACION\n            |   OPERACION operador_resta OPERACION\n            |   OPERACION operador_multiplicacion OPERACION\n            |   OPERACION operador_divicion OPERACION\n            |   OPERACION operador_resto OPERACION\n            |   OPERACION operador_igualacion OPERACION\n            |   OPERACION operador_diferenciacion OPERACION\n            |   OPERACION operador_mayor OPERACION\n            |   OPERACION operador_mayor_igual OPERACION\n            |   OPERACION operador_menor OPERACION\n            |   OPERACION operador_menor_igual OPERACION\n            |   OPERACION operador_AND OPERACION\n            |   OPERACION operador_OR OPERACION\n            |   OPERACION operador_NOT OPERACION\n            |   OPERACION operador_igual OPERACION\n    \n        OPERACION : numero\n    \n    INSTRUCCIONES : DECLARACION\n                  | ASINGACION\n                  | PRODIF_ELSE\n                  | PRODIF\n                  | PRODDO_WHILE\n                  | PRODWHILE\n                  | PRODVOID\n                  | RETURN\n                  | BREAK\n                  | CONTINUE\n                  | LLAMADA\n                  \n    \n    DECLARACION : TIPO_DATO id operador_igual DATO punto_coma\n    \n    ASINGACION : id operador_igual DATO punto_coma\n    \n    TIPO_DATO : tipo_int \n                | tipo_double\n                | tipo_string\n                | tipo_char\n                | tipo_boolean\n    \n    \n    DATO : numero \n            | dato_double\n            | dato_string\n            | dato_char\n            | dato_boolean_true\n            | dato_boolean_false\n    \n    PARAMETRO : TIPO_DATO id\n    \n    PARAMETROS :  PARAMETROS coma PARAMETRO \n    \n    PARAMETROS :  PARAMETRO \n    \n    PARAMETROS :   \n    \n    LLAMADA : id parentesis_abre ARGUMENTOS parentesis_cierra\n    \n    ARGUMENTOS :  ARGUMENTOS coma ARGUMENTO \n    \n    ARGUMENTOS :  ARGUMENTO\n    \n    ARGUMENTOS :  \n     \n    ARGUMENTO :  DATO\n    \n    RETURN : reservada_return punto_coma \n    \n    RETURN : reservada_return DATO punto_coma \n    \n    BREAK : reservada_break punto_coma \n    \n    CONTINUE : reservada_continue punto_coma \n    \n    OPERACION_FACTORIZADO : parentesis_abre OPERACIONES parentesis_cierra\n    \n    INSTRUCCIONES_FACTORIZADO : llave_abre INSTRUCCIONES llave_cierra\n    \n    PARAMETROS_FACTORIZADO : parentesis_abre PARAMETROS parentesis_cierra\n    '
    
_lr_action_items = {'reservada_if':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,78,98,100,104,106,107,109,125,130,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,16,-73,-75,-76,-19,-17,-74,-78,-20,-68,-52,-21,-18,-16,-51,]),'reservada_do':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,78,98,100,104,106,107,109,125,130,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,17,-73,-75,-76,-19,-17,-74,-78,-20,-68,-52,-21,-18,-16,-51,]),'reservada_while':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,33,34,40,48,49,50,69,78,98,100,104,106,107,109,125,130,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,54,18,-73,-75,-76,-19,-17,-74,-78,-20,-68,-52,-21,-18,-16,-51,]),'reservada_void':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,78,98,100,104,106,107,109,125,130,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,19,-73,-75,-76,-19,-17,-74,-78,-20,-68,-52,-21,-18,-16,-51,]),'id':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,21,25,26,27,28,29,30,34,40,48,49,50,67,69,78,98,100,103,104,106,107,109,125,130,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,36,39,-53,-54,-55,-56,-57,-2,68,-73,-75,-76,-19,99,-17,-74,-78,-20,128,-68,-52,-21,-18,-16,-51,]),'reservada_return':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,78,98,100,104,106,107,109,125,130,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,22,-73,-75,-76,-19,-17,-74,-78,-20,-68,-52,-21,-18,-16,-51,]),'reservada_break':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,78,98,100,104,106,107,109,125,130,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,23,-73,-75,-76,-19,-17,-74,-78,-20,-68,-52,-21,-18,-16,-51,]),'reservada_continue':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,78,98,100,104,106,107,109,125,130,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,24,-73,-75,-76,-19,-17,-74,-78,-20,-68,-52,-21,-18,-16,-51,]),'tipo_int':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,71,78,98,100,104,106,107,109,125,127,130,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,25,-73,-75,-76,-19,-17,25,-74,-78,-20,-68,-52,-21,-18,-16,25,-51,]),'tipo_double':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,71,78,98,100,104,106,107,109,125,127,130,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,26,-73,-75,-76,-19,-17,26,-74,-78,-20,-68,-52,-21,-18,-16,26,-51,]),'tipo_string':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,71,78,98,100,104,106,107,109,125,127,130,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,27,-73,-75,-76,-19,-17,27,-74,-78,-20,-68,-52,-21,-18,-16,27,-51,]),'tipo_char':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,71,78,98,100,104,106,107,109,125,127,130,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,28,-73,-75,-76,-19,-17,28,-74,-78,-20,-68,-52,-21,-18,-16,28,-51,]),'tipo_boolean':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,34,40,48,49,50,69,71,78,98,100,104,106,107,109,125,127,130,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,29,-73,-75,-76,-19,-17,29,-74,-78,-20,-68,-52,-21,-18,-16,29,-51,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,30,40,48,49,50,69,78,98,100,104,106,107,109,125,130,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-2,-73,-75,-76,-19,-17,-74,-78,-20,-68,-52,-21,-18,-16,-51,]),'parentesis_abre':([16,18,20,36,39,54,68,],[32,32,37,71,71,32,37,]),'llave_abre':([17,31,35,70,76,79,80,126,],[34,34,34,34,34,34,-77,-79,]),'operador_igual':([20,39,52,53,68,81,99,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[38,77,96,-39,38,96,77,-24,-25,-26,96,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,96,]),'punto_coma':([22,23,24,41,42,43,44,45,46,47,75,80,97,108,],[40,48,49,78,-58,-59,-60,-61,-62,-63,106,-77,125,130,]),'numero':([22,32,37,38,51,52,53,77,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[42,53,42,42,53,-23,-39,42,-22,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,42,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,]),'dato_double':([22,37,38,77,105,],[43,43,43,43,43,]),'dato_string':([22,37,38,77,105,],[44,44,44,44,44,]),'dato_char':([22,37,38,77,105,],[45,45,45,45,45,]),'dato_boolean_true':([22,37,38,77,105,],[46,46,46,46,46,]),'dato_boolean_false':([22,37,38,77,105,],[47,47,47,47,47,]),'parentesis_cierra':([37,42,43,44,45,46,47,51,52,53,71,72,73,74,81,101,102,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,131,],[-71,-58,-59,-60,-61,-62,-63,80,-23,-39,-67,104,-70,-72,-22,126,-66,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-64,-69,-65,]),'coma':([37,42,43,44,45,46,47,71,72,73,74,101,102,128,129,131,],[-71,-58,-59,-60,-61,-62,-63,-67,105,-70,-72,127,-66,-64,-69,-65,]),'llave_cierra':([40,48,49,50,55,56,57,58,59,60,61,62,63,64,65,66,69,78,98,100,104,106,109,125,130,],[-73,-75,-76,-19,98,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-17,-74,-78,-20,-68,-52,-18,-16,-51,]),'reservada_else':([50,98,],[79,-78,]),'operador_suma':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[82,-39,82,-24,-25,-26,82,-28,82,82,82,82,82,82,82,82,-37,82,]),'operador_resta':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[83,-39,83,-24,-25,-26,83,-28,83,83,83,83,83,83,83,83,-37,83,]),'operador_multiplicacion':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[84,-39,84,84,84,-26,84,-28,84,84,84,84,84,84,84,84,-37,84,]),'operador_divicion':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[85,-39,85,-24,-25,-26,85,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,85,]),'operador_resto':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[86,-39,86,86,86,-26,86,-28,86,86,86,86,86,86,86,86,-37,86,]),'operador_igualacion':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[87,-39,87,-24,-25,-26,87,-28,-29,-30,-31,-32,-33,-34,87,87,-37,87,]),'operador_diferenciacion':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[88,-39,88,-24,-25,-26,88,-28,-29,-30,-31,-32,-33,-34,88,88,-37,88,]),'operador_mayor':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[89,-39,89,-24,-25,-26,89,-28,89,89,-31,-32,-33,-34,89,89,-37,89,]),'operador_mayor_igual':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[90,-39,90,-24,-25,-26,90,-28,90,90,-31,-32,-33,-34,90,90,-37,90,]),'operador_menor':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[91,-39,91,-24,-25,-26,91,-28,91,91,-31,-32,-33,-34,91,91,-37,91,]),'operador_menor_igual':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[92,-39,92,-24,-25,-26,92,-28,92,92,-31,-32,-33,-34,92,92,-37,92,]),'operador_AND':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[93,-39,93,-24,-25,-26,93,-28,-29,-30,-31,-32,-33,-34,-35,93,-37,93,]),'operador_OR':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[94,-39,94,-24,-25,-26,94,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,94,]),'operador_NOT':([52,53,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,],[95,-39,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S0':([0,],[1,]),'INITIAL':([0,],[2,]),'ESTRUCTURA':([0,2,],[3,30,]),'PRODIF_ELSE':([0,2,34,],[4,4,58,]),'PRODIF':([0,2,34,],[5,5,59,]),'PRODDO_WHILE':([0,2,34,],[6,6,60,]),'PRODWHILE':([0,2,34,],[7,7,61,]),'PRODVOID':([0,2,34,],[8,8,62,]),'PRODFUNCION':([0,2,],[9,9,]),'DECLARACION':([0,2,34,],[10,10,56,]),'LLAMADA':([0,2,34,],[11,11,66,]),'ASINGACION':([0,2,34,],[12,12,57,]),'RETURN':([0,2,34,],[13,13,63,]),'BREAK':([0,2,34,],[14,14,64,]),'CONTINUE':([0,2,34,],[15,15,65,]),'TIPO_DATO':([0,2,34,71,127,],[21,21,67,103,103,]),'OPERACION_FACTORIZADO':([16,18,54,],[31,35,97,]),'INSTRUCCIONES_FACTORIZADO':([17,31,35,70,76,79,],[33,50,69,100,107,109,]),'DATO':([22,37,38,77,105,],[41,74,75,108,74,]),'OPERACIONES':([32,],[51,]),'OPERACION':([32,51,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,],[52,81,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,]),'INSTRUCCIONES':([34,],[55,]),'PARAMETROS_FACTORIZADO':([36,39,],[70,76,]),'ARGUMENTOS':([37,],[72,]),'ARGUMENTO':([37,105,],[73,129,]),'PARAMETROS':([71,],[101,]),'PARAMETRO':([71,127,],[102,131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S0","S'",1,None,None,None),
  ('S0 -> INITIAL','S0',1,'p_S0','lexico.py',262),
  ('INITIAL -> INITIAL ESTRUCTURA','INITIAL',2,'p_INITIAL_RECURSIVO','lexico.py',274),
  ('INITIAL -> ESTRUCTURA','INITIAL',1,'p_INITIAL_INICIAL','lexico.py',285),
  ('ESTRUCTURA -> PRODIF_ELSE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',292),
  ('ESTRUCTURA -> PRODIF','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',293),
  ('ESTRUCTURA -> PRODDO_WHILE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',294),
  ('ESTRUCTURA -> PRODWHILE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',295),
  ('ESTRUCTURA -> PRODVOID','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',296),
  ('ESTRUCTURA -> PRODFUNCION','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',297),
  ('ESTRUCTURA -> DECLARACION','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',298),
  ('ESTRUCTURA -> LLAMADA','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',299),
  ('ESTRUCTURA -> ASINGACION','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',300),
  ('ESTRUCTURA -> RETURN','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',301),
  ('ESTRUCTURA -> BREAK','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',302),
  ('ESTRUCTURA -> CONTINUE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',303),
  ('PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma','PRODDO_WHILE',5,'p_ESTRUCTURA_PRODDO_WHILE','lexico.py',312),
  ('PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODWHILE',3,'p_ESTRUCTURA_PRODWHILE','lexico.py',323),
  ('PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO','PRODIF_ELSE',5,'p_ESTRUCTURA_IF_ELSE','lexico.py',332),
  ('PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODIF',3,'p_ESTRUCTURA_IF','lexico.py',344),
  ('PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODVOID',4,'p_ESTRUCTURA_VOID','lexico.py',353),
  ('PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODFUNCION',4,'p_ESTRUCTURA_FUNCION','lexico.py',363),
  ('OPERACIONES -> OPERACIONES OPERACION','OPERACIONES',2,'p_OPERACIONES','lexico.py',373),
  ('OPERACIONES -> OPERACION','OPERACIONES',1,'p_OPERACIONES_AUX','lexico.py',381),
  ('OPERACION -> OPERACION operador_suma OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',388),
  ('OPERACION -> OPERACION operador_resta OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',389),
  ('OPERACION -> OPERACION operador_multiplicacion OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',390),
  ('OPERACION -> OPERACION operador_divicion OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',391),
  ('OPERACION -> OPERACION operador_resto OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',392),
  ('OPERACION -> OPERACION operador_igualacion OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',393),
  ('OPERACION -> OPERACION operador_diferenciacion OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',394),
  ('OPERACION -> OPERACION operador_mayor OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',395),
  ('OPERACION -> OPERACION operador_mayor_igual OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',396),
  ('OPERACION -> OPERACION operador_menor OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',397),
  ('OPERACION -> OPERACION operador_menor_igual OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',398),
  ('OPERACION -> OPERACION operador_AND OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',399),
  ('OPERACION -> OPERACION operador_OR OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',400),
  ('OPERACION -> OPERACION operador_NOT OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',401),
  ('OPERACION -> OPERACION operador_igual OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',402),
  ('OPERACION -> numero','OPERACION',1,'p_OPERACION_UNO','lexico.py',411),
  ('INSTRUCCIONES -> DECLARACION','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',420),
  ('INSTRUCCIONES -> ASINGACION','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',421),
  ('INSTRUCCIONES -> PRODIF_ELSE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',422),
  ('INSTRUCCIONES -> PRODIF','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',423),
  ('INSTRUCCIONES -> PRODDO_WHILE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',424),
  ('INSTRUCCIONES -> PRODWHILE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',425),
  ('INSTRUCCIONES -> PRODVOID','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',426),
  ('INSTRUCCIONES -> RETURN','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',427),
  ('INSTRUCCIONES -> BREAK','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',428),
  ('INSTRUCCIONES -> CONTINUE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',429),
  ('INSTRUCCIONES -> LLAMADA','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',430),
  ('DECLARACION -> TIPO_DATO id operador_igual DATO punto_coma','DECLARACION',5,'p_DECLARACIONES','lexico.py',438),
  ('ASINGACION -> id operador_igual DATO punto_coma','ASINGACION',4,'p_ASIGNACION','lexico.py',450),
  ('TIPO_DATO -> tipo_int','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',460),
  ('TIPO_DATO -> tipo_double','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',461),
  ('TIPO_DATO -> tipo_string','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',462),
  ('TIPO_DATO -> tipo_char','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',463),
  ('TIPO_DATO -> tipo_boolean','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',464),
  ('DATO -> numero','DATO',1,'p_DATO','lexico.py',471),
  ('DATO -> dato_double','DATO',1,'p_DATO','lexico.py',472),
  ('DATO -> dato_string','DATO',1,'p_DATO','lexico.py',473),
  ('DATO -> dato_char','DATO',1,'p_DATO','lexico.py',474),
  ('DATO -> dato_boolean_true','DATO',1,'p_DATO','lexico.py',475),
  ('DATO -> dato_boolean_false','DATO',1,'p_DATO','lexico.py',476),
  ('PARAMETRO -> TIPO_DATO id','PARAMETRO',2,'p_PARAMETRO_DEFINICION','lexico.py',483),
  ('PARAMETROS -> PARAMETROS coma PARAMETRO','PARAMETROS',3,'p_PARAMETROS_RECURSIVO','lexico.py',490),
  ('PARAMETROS -> PARAMETRO','PARAMETROS',1,'p_PARAMETROS_RECURSIVO_AUX_1','lexico.py',499),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_PARAMETROS_RECURSIVO_AUX_2','lexico.py',506),
  ('LLAMADA -> id parentesis_abre ARGUMENTOS parentesis_cierra','LLAMADA',4,'p_LLAMADA','lexico.py',513),
  ('ARGUMENTOS -> ARGUMENTOS coma ARGUMENTO','ARGUMENTOS',3,'p_ARGUMENTOS','lexico.py',523),
  ('ARGUMENTOS -> ARGUMENTO','ARGUMENTOS',1,'p_ARGUMENTOS_AUX_1','lexico.py',532),
  ('ARGUMENTOS -> <empty>','ARGUMENTOS',0,'p_ARGUMENTOS_AUX_2','lexico.py',539),
  ('ARGUMENTO -> DATO','ARGUMENTO',1,'p_ARGUMENTO','lexico.py',545),
  ('RETURN -> reservada_return punto_coma','RETURN',2,'p_RETURN','lexico.py',552),
  ('RETURN -> reservada_return DATO punto_coma','RETURN',3,'p_RETURN_AUX','lexico.py',560),
  ('BREAK -> reservada_break punto_coma','BREAK',2,'p_BREAK','lexico.py',571),
  ('CONTINUE -> reservada_continue punto_coma','CONTINUE',2,'p_CONTINUE','lexico.py',578),
  ('OPERACION_FACTORIZADO -> parentesis_abre OPERACIONES parentesis_cierra','OPERACION_FACTORIZADO',3,'p_FACTORIZACION_OPERACION','lexico.py',594),
  ('INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra','INSTRUCCIONES_FACTORIZADO',3,'p_FACTORIZACION_INSTRUCCIONES','lexico.py',602),
  ('PARAMETROS_FACTORIZADO -> parentesis_abre PARAMETROS parentesis_cierra','PARAMETROS_FACTORIZADO',3,'p_FACTORIZACION_PARAMETROS','lexico.py',610),
]
