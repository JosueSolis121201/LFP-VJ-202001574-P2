
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftoperador_ORleftoperador_ANDleftoperador_igualacionoperador_diferenciacionleftoperador_menoroperador_menor_igualoperador_mayoroperador_mayor_igualleftoperador_sumaoperador_restaleftoperador_multiplicacionoperador_restorightoperador_NOTcoma comentario_multilinea comentario_unilinea corchete_abre corchete_cierra dato_boolean_false dato_boolean_true dato_char dato_double dato_string dos_puntos id llave_abre llave_cierra numero operador_AND operador_NOT operador_OR operador_diferenciacion operador_divicion operador_igual operador_igualacion operador_mayor operador_mayor_igual operador_menor operador_menor_igual operador_multiplicacion operador_resta operador_resto operador_suma parentesis_abre parentesis_cierra punto punto_coma reservada_break reservada_continue reservada_do reservada_else reservada_fin reservada_if reservada_inicio reservada_return reservada_void reservada_while tipo_boolean tipo_char tipo_double tipo_int tipo_string\n      S0 : INITIAL\n    \n    INITIAL : INITIAL ESTRUCTURA\n    \n    INITIAL : ESTRUCTURA\n    \n    ESTRUCTURA : PRODIF_ELSE\n               | PRODIF\n               | PRODDO_WHILE\n               | PRODWHILE\n               | PRODVOID\n               | PRODFUNCION\n               | DECLARACION\n               | LLAMADA\n                 \n    \n    PRODDO_WHILE : reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma\n    \n    PRODWHILE : reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO \n    \n    PRODIF_ELSE : reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO\n    \n    PRODIF : reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    PRODVOID : reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    PRODFUNCION : TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO\n    \n    OPERACIONES : OPERACIONES OPERACION\n    \n     OPERACIONES : OPERACION \n    \n    OPERACION : OPERACION operador_suma OPERACION\n            |   OPERACION operador_resta OPERACION\n            |   OPERACION operador_multiplicacion OPERACION\n            |   OPERACION operador_divicion OPERACION\n            |   OPERACION operador_resto OPERACION\n            |   OPERACION operador_igualacion OPERACION\n            |   OPERACION operador_diferenciacion OPERACION\n            |   OPERACION operador_mayor OPERACION\n            |   OPERACION operador_mayor_igual OPERACION\n            |   OPERACION operador_menor OPERACION\n            |   OPERACION operador_menor_igual OPERACION\n            |   OPERACION operador_AND OPERACION\n            |   OPERACION operador_OR OPERACION\n            |   OPERACION operador_NOT OPERACION\n            |   OPERACION operador_igual OPERACION\n    \n        OPERACION : numero\n    \n    INSTRUCCIONES : DECLARACION\n                  | ASINGACION\n                  | PRODIF_ELSE\n                  | PRODIF\n                  | PRODDO_WHILE\n                  | PRODWHILE\n                  | PRODVOID\n                  | RETURN\n                  | BREAK\n                  | CONTINUE\n                  | LLAMADA\n                  \n    \n    DECLARACION : TIPO_DATO id operador_igual DATO punto_coma\n    \n    ASINGACION : id operador_igual DATO punto_coma\n    \n    TIPO_DATO : tipo_int \n                | tipo_double\n                | tipo_string\n                | tipo_char\n                | tipo_boolean\n    \n    \n    DATO : numero \n            | dato_double\n            | dato_string\n            | dato_char\n            | dato_boolean_true\n            | dato_boolean_false\n    \n    PARAMETRO : TIPO_DATO id\n    \n    PARAMETROS :  PARAMETROS coma PARAMETRO \n    \n    PARAMETROS :  PARAMETRO \n    \n    PARAMETROS :   \n    \n    LLAMADA : id parentesis_abre ARGUMENTOS parentesis_cierra\n    \n    ARGUMENTOS :  ARGUMENTOS coma ARGUMENTO \n    \n    ARGUMENTOS :  ARGUMENTO\n    \n    ARGUMENTOS :  \n     \n    ARGUMENTO :  DATO\n    \n    RETURN : reservada_return punto_coma \n    \n    RETURN : reservada_return DATO punto_coma \n    \n    BREAK : reservada_break punto_coma \n    \n    CONTINUE : reservada_continue punto_coma \n    \n    OPERACION_FACTORIZADO : parentesis_abre OPERACIONES parentesis_cierra\n    \n    INSTRUCCIONES_FACTORIZADO : llave_abre INSTRUCCIONES llave_cierra\n    \n    PARAMETROS_FACTORIZADO : parentesis_abre PARAMETROS parentesis_cierra\n    '
    
_lr_action_items = {'reservada_if':([0,2,3,4,5,6,7,8,9,10,11,23,27,32,54,87,94,98,100,102,118,125,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,12,-15,-13,-74,-16,-64,-17,-14,-12,-47,]),'reservada_do':([0,2,3,4,5,6,7,8,9,10,11,23,27,32,54,87,94,98,100,102,118,125,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,13,-15,-13,-74,-16,-64,-17,-14,-12,-47,]),'reservada_while':([0,2,3,4,5,6,7,8,9,10,11,23,26,27,32,54,87,94,98,100,102,118,125,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,36,14,-15,-13,-74,-16,-64,-17,-14,-12,-47,]),'reservada_void':([0,2,3,4,5,6,7,8,9,10,11,23,27,32,54,87,94,98,100,102,118,125,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,15,-15,-13,-74,-16,-64,-17,-14,-12,-47,]),'id':([0,2,3,4,5,6,7,8,9,10,11,15,17,18,19,20,21,22,23,27,32,49,54,87,94,97,98,100,102,118,125,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,29,31,-49,-50,-51,-52,-53,-2,50,-15,88,-13,-74,-16,123,-64,-17,-14,-12,-47,]),'tipo_int':([0,2,3,4,5,6,7,8,9,10,11,23,27,32,54,56,87,94,98,100,102,118,122,125,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,18,-15,-13,18,-74,-16,-64,-17,-14,-12,18,-47,]),'tipo_double':([0,2,3,4,5,6,7,8,9,10,11,23,27,32,54,56,87,94,98,100,102,118,122,125,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,19,-15,-13,19,-74,-16,-64,-17,-14,-12,19,-47,]),'tipo_string':([0,2,3,4,5,6,7,8,9,10,11,23,27,32,54,56,87,94,98,100,102,118,122,125,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,20,-15,-13,20,-74,-16,-64,-17,-14,-12,20,-47,]),'tipo_char':([0,2,3,4,5,6,7,8,9,10,11,23,27,32,54,56,87,94,98,100,102,118,122,125,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,21,-15,-13,21,-74,-16,-64,-17,-14,-12,21,-47,]),'tipo_boolean':([0,2,3,4,5,6,7,8,9,10,11,23,27,32,54,56,87,94,98,100,102,118,122,125,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,22,-15,-13,22,-74,-16,-64,-17,-14,-12,22,-47,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,23,32,54,87,94,98,100,102,118,125,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-15,-13,-74,-16,-64,-17,-14,-12,-47,]),'parentesis_abre':([12,14,16,29,31,36,50,],[25,25,30,56,56,25,30,]),'llave_abre':([13,24,28,55,66,68,69,121,],[27,27,27,27,27,27,-73,-75,]),'numero':([25,30,33,34,35,51,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,99,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[35,60,35,-19,-35,60,60,-18,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,60,60,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,]),'reservada_return':([27,],[51,]),'reservada_break':([27,],[52,]),'reservada_continue':([27,],[53,]),'parentesis_cierra':([30,33,34,35,56,57,58,59,60,61,62,63,64,65,70,95,96,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,123,124,127,],[-67,69,-19,-35,-63,98,-66,-68,-54,-55,-56,-57,-58,-59,-18,121,-62,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-60,-65,-61,]),'coma':([30,56,57,58,59,60,61,62,63,64,65,95,96,123,124,127,],[-67,-63,99,-66,-68,-54,-55,-56,-57,-58,-59,122,-62,-60,-65,-61,]),'dato_double':([30,51,67,89,99,],[61,61,61,61,61,]),'dato_string':([30,51,67,89,99,],[62,62,62,62,62,]),'dato_char':([30,51,67,89,99,],[63,63,63,63,63,]),'dato_boolean_true':([30,51,67,89,99,],[64,64,64,64,64,]),'dato_boolean_false':([30,51,67,89,99,],[65,65,65,65,65,]),'operador_igual':([31,34,35,50,70,88,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[67,85,-35,89,85,67,-20,-21,-22,85,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,85,]),'reservada_else':([32,87,],[68,-74,]),'llave_cierra':([32,37,38,39,40,41,42,43,44,45,46,47,48,54,87,90,92,93,94,98,102,118,120,125,126,],[-15,87,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-13,-74,-69,-71,-72,-16,-64,-14,-12,-70,-47,-48,]),'operador_suma':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[71,-35,71,-20,-21,-22,71,-24,71,71,71,71,71,71,71,71,-33,71,]),'operador_resta':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[72,-35,72,-20,-21,-22,72,-24,72,72,72,72,72,72,72,72,-33,72,]),'operador_multiplicacion':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[73,-35,73,73,73,-22,73,-24,73,73,73,73,73,73,73,73,-33,73,]),'operador_divicion':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[74,-35,74,-20,-21,-22,74,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,74,]),'operador_resto':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[75,-35,75,75,75,-22,75,-24,75,75,75,75,75,75,75,75,-33,75,]),'operador_igualacion':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[76,-35,76,-20,-21,-22,76,-24,-25,-26,-27,-28,-29,-30,76,76,-33,76,]),'operador_diferenciacion':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[77,-35,77,-20,-21,-22,77,-24,-25,-26,-27,-28,-29,-30,77,77,-33,77,]),'operador_mayor':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[78,-35,78,-20,-21,-22,78,-24,78,78,-27,-28,-29,-30,78,78,-33,78,]),'operador_mayor_igual':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[79,-35,79,-20,-21,-22,79,-24,79,79,-27,-28,-29,-30,79,79,-33,79,]),'operador_menor':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[80,-35,80,-20,-21,-22,80,-24,80,80,-27,-28,-29,-30,80,80,-33,80,]),'operador_menor_igual':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[81,-35,81,-20,-21,-22,81,-24,81,81,-27,-28,-29,-30,81,81,-33,81,]),'operador_AND':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[82,-35,82,-20,-21,-22,82,-24,-25,-26,-27,-28,-29,-30,-31,82,-33,82,]),'operador_OR':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[83,-35,83,-20,-21,-22,83,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,83,]),'operador_NOT':([34,35,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,],[84,-35,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'punto_coma':([51,52,53,60,61,62,63,64,65,69,86,91,101,119,],[90,92,93,-54,-55,-56,-57,-58,-59,-73,118,120,125,126,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S0':([0,],[1,]),'INITIAL':([0,],[2,]),'ESTRUCTURA':([0,2,],[3,23,]),'PRODIF_ELSE':([0,2,27,],[4,4,40,]),'PRODIF':([0,2,27,],[5,5,41,]),'PRODDO_WHILE':([0,2,27,],[6,6,42,]),'PRODWHILE':([0,2,27,],[7,7,43,]),'PRODVOID':([0,2,27,],[8,8,44,]),'PRODFUNCION':([0,2,],[9,9,]),'DECLARACION':([0,2,27,],[10,10,38,]),'LLAMADA':([0,2,27,],[11,11,48,]),'TIPO_DATO':([0,2,27,56,122,],[17,17,49,97,97,]),'OPERACION_FACTORIZADO':([12,14,36,],[24,28,86,]),'INSTRUCCIONES_FACTORIZADO':([13,24,28,55,66,68,],[26,32,54,94,100,102,]),'OPERACIONES':([25,],[33,]),'OPERACION':([25,33,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,],[34,70,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,]),'INSTRUCCIONES':([27,],[37,]),'ASINGACION':([27,],[39,]),'RETURN':([27,],[45,]),'BREAK':([27,],[46,]),'CONTINUE':([27,],[47,]),'PARAMETROS_FACTORIZADO':([29,31,],[55,66,]),'ARGUMENTOS':([30,],[57,]),'ARGUMENTO':([30,99,],[58,124,]),'DATO':([30,51,67,89,99,],[59,91,101,119,59,]),'PARAMETROS':([56,],[95,]),'PARAMETRO':([56,122,],[96,127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S0","S'",1,None,None,None),
  ('S0 -> INITIAL','S0',1,'p_S0','lexico.py',274),
  ('INITIAL -> INITIAL ESTRUCTURA','INITIAL',2,'p_INITIAL_RECURSIVO','lexico.py',284),
  ('INITIAL -> ESTRUCTURA','INITIAL',1,'p_INITIAL_INICIAL','lexico.py',295),
  ('ESTRUCTURA -> PRODIF_ELSE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',302),
  ('ESTRUCTURA -> PRODIF','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',303),
  ('ESTRUCTURA -> PRODDO_WHILE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',304),
  ('ESTRUCTURA -> PRODWHILE','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',305),
  ('ESTRUCTURA -> PRODVOID','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',306),
  ('ESTRUCTURA -> PRODFUNCION','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',307),
  ('ESTRUCTURA -> DECLARACION','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',308),
  ('ESTRUCTURA -> LLAMADA','ESTRUCTURA',1,'p_ESTRUCTURA','lexico.py',309),
  ('PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma','PRODDO_WHILE',5,'p_ESTRUCTURA_PRODDO_WHILE','lexico.py',318),
  ('PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODWHILE',3,'p_ESTRUCTURA_PRODWHILE','lexico.py',329),
  ('PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO','PRODIF_ELSE',5,'p_ESTRUCTURA_IF_ELSE','lexico.py',338),
  ('PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODIF',3,'p_ESTRUCTURA_IF','lexico.py',350),
  ('PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODVOID',4,'p_ESTRUCTURA_VOID','lexico.py',359),
  ('PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO','PRODFUNCION',4,'p_ESTRUCTURA_FUNCION','lexico.py',369),
  ('OPERACIONES -> OPERACIONES OPERACION','OPERACIONES',2,'p_OPERACIONES','lexico.py',379),
  ('OPERACIONES -> OPERACION','OPERACIONES',1,'p_OPERACIONES_AUX','lexico.py',387),
  ('OPERACION -> OPERACION operador_suma OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',394),
  ('OPERACION -> OPERACION operador_resta OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',395),
  ('OPERACION -> OPERACION operador_multiplicacion OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',396),
  ('OPERACION -> OPERACION operador_divicion OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',397),
  ('OPERACION -> OPERACION operador_resto OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',398),
  ('OPERACION -> OPERACION operador_igualacion OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',399),
  ('OPERACION -> OPERACION operador_diferenciacion OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',400),
  ('OPERACION -> OPERACION operador_mayor OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',401),
  ('OPERACION -> OPERACION operador_mayor_igual OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',402),
  ('OPERACION -> OPERACION operador_menor OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',403),
  ('OPERACION -> OPERACION operador_menor_igual OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',404),
  ('OPERACION -> OPERACION operador_AND OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',405),
  ('OPERACION -> OPERACION operador_OR OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',406),
  ('OPERACION -> OPERACION operador_NOT OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',407),
  ('OPERACION -> OPERACION operador_igual OPERACION','OPERACION',3,'p_OPERACION_TRES','lexico.py',408),
  ('OPERACION -> numero','OPERACION',1,'p_OPERACION_UNO','lexico.py',417),
  ('INSTRUCCIONES -> DECLARACION','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',426),
  ('INSTRUCCIONES -> ASINGACION','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',427),
  ('INSTRUCCIONES -> PRODIF_ELSE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',428),
  ('INSTRUCCIONES -> PRODIF','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',429),
  ('INSTRUCCIONES -> PRODDO_WHILE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',430),
  ('INSTRUCCIONES -> PRODWHILE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',431),
  ('INSTRUCCIONES -> PRODVOID','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',432),
  ('INSTRUCCIONES -> RETURN','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',433),
  ('INSTRUCCIONES -> BREAK','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',434),
  ('INSTRUCCIONES -> CONTINUE','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',435),
  ('INSTRUCCIONES -> LLAMADA','INSTRUCCIONES',1,'p_INSTRUCCIONES','lexico.py',436),
  ('DECLARACION -> TIPO_DATO id operador_igual DATO punto_coma','DECLARACION',5,'p_DECLARACIONES','lexico.py',444),
  ('ASINGACION -> id operador_igual DATO punto_coma','ASINGACION',4,'p_ASIGNACION','lexico.py',456),
  ('TIPO_DATO -> tipo_int','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',466),
  ('TIPO_DATO -> tipo_double','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',467),
  ('TIPO_DATO -> tipo_string','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',468),
  ('TIPO_DATO -> tipo_char','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',469),
  ('TIPO_DATO -> tipo_boolean','TIPO_DATO',1,'p_TIPO_DATO','lexico.py',470),
  ('DATO -> numero','DATO',1,'p_DATO','lexico.py',477),
  ('DATO -> dato_double','DATO',1,'p_DATO','lexico.py',478),
  ('DATO -> dato_string','DATO',1,'p_DATO','lexico.py',479),
  ('DATO -> dato_char','DATO',1,'p_DATO','lexico.py',480),
  ('DATO -> dato_boolean_true','DATO',1,'p_DATO','lexico.py',481),
  ('DATO -> dato_boolean_false','DATO',1,'p_DATO','lexico.py',482),
  ('PARAMETRO -> TIPO_DATO id','PARAMETRO',2,'p_PARAMETRO_DEFINICION','lexico.py',489),
  ('PARAMETROS -> PARAMETROS coma PARAMETRO','PARAMETROS',3,'p_PARAMETROS_RECURSIVO','lexico.py',496),
  ('PARAMETROS -> PARAMETRO','PARAMETROS',1,'p_PARAMETROS_RECURSIVO_AUX_1','lexico.py',505),
  ('PARAMETROS -> <empty>','PARAMETROS',0,'p_PARAMETROS_RECURSIVO_AUX_2','lexico.py',512),
  ('LLAMADA -> id parentesis_abre ARGUMENTOS parentesis_cierra','LLAMADA',4,'p_LLAMADA','lexico.py',519),
  ('ARGUMENTOS -> ARGUMENTOS coma ARGUMENTO','ARGUMENTOS',3,'p_ARGUMENTOS','lexico.py',529),
  ('ARGUMENTOS -> ARGUMENTO','ARGUMENTOS',1,'p_ARGUMENTOS_AUX_1','lexico.py',538),
  ('ARGUMENTOS -> <empty>','ARGUMENTOS',0,'p_ARGUMENTOS_AUX_2','lexico.py',545),
  ('ARGUMENTO -> DATO','ARGUMENTO',1,'p_ARGUMENTO','lexico.py',551),
  ('RETURN -> reservada_return punto_coma','RETURN',2,'p_RETURN','lexico.py',558),
  ('RETURN -> reservada_return DATO punto_coma','RETURN',3,'p_RETURN_AUX','lexico.py',566),
  ('BREAK -> reservada_break punto_coma','BREAK',2,'p_BREAK','lexico.py',577),
  ('CONTINUE -> reservada_continue punto_coma','CONTINUE',2,'p_CONTINUE','lexico.py',584),
  ('OPERACION_FACTORIZADO -> parentesis_abre OPERACIONES parentesis_cierra','OPERACION_FACTORIZADO',3,'p_FACTORIZACION_OPERACION','lexico.py',600),
  ('INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra','INSTRUCCIONES_FACTORIZADO',3,'p_FACTORIZACION_INSTRUCCIONES','lexico.py',608),
  ('PARAMETROS_FACTORIZADO -> parentesis_abre PARAMETROS parentesis_cierra','PARAMETROS_FACTORIZADO',3,'p_FACTORIZACION_PARAMETROS','lexico.py',616),
]
