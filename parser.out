Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    comentario_multilinea
    comentario_unilinea
    corchete_abre
    corchete_cierra
    dos_puntos
    punto
    reservada_break
    reservada_continue
    reservada_fin
    reservada_inicio
    reservada_return

Grammar

Rule 0     S' -> S0
Rule 1     S0 -> INITIAL
Rule 2     INITIAL -> INITIAL ESTRUCTURA
Rule 3     INITIAL -> ESTRUCTURA
Rule 4     ESTRUCTURA -> PRODIF_ELSE
Rule 5     ESTRUCTURA -> PRODIF
Rule 6     ESTRUCTURA -> PRODDO_WHILE
Rule 7     ESTRUCTURA -> PRODWHILE
Rule 8     ESTRUCTURA -> PRODVOID
Rule 9     ESTRUCTURA -> PRODFUNCION
Rule 10    PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma
Rule 11    PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
Rule 12    PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO
Rule 13    PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
Rule 14    PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO
Rule 15    PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO
Rule 16    OPERACION -> OPERACION operador_suma OPERACION
Rule 17    OPERACION -> OPERACION operador_resta OPERACION
Rule 18    OPERACION -> OPERACION operador_multiplicacion OPERACION
Rule 19    OPERACION -> OPERACION operador_divicion OPERACION
Rule 20    OPERACION -> OPERACION operador_resto OPERACION
Rule 21    OPERACION -> OPERACION operador_igualacion OPERACION
Rule 22    OPERACION -> OPERACION operador_diferenciacion OPERACION
Rule 23    OPERACION -> OPERACION operador_mayor OPERACION
Rule 24    OPERACION -> OPERACION operador_mayor_igual OPERACION
Rule 25    OPERACION -> OPERACION operador_menor OPERACION
Rule 26    OPERACION -> OPERACION operador_menor_igual OPERACION
Rule 27    OPERACION -> OPERACION operador_AND OPERACION
Rule 28    OPERACION -> OPERACION operador_OR OPERACION
Rule 29    OPERACION -> OPERACION operador_NOT OPERACION
Rule 30    OPERACION -> OPERACION operador_igual OPERACION
Rule 31    OPERACION -> numero
Rule 32    INSTRUCCIONES -> DECLARACION
Rule 33    INSTRUCCIONES -> ASINGACION
Rule 34    INSTRUCCIONES -> PRODIF_ELSE
Rule 35    INSTRUCCIONES -> PRODIF
Rule 36    INSTRUCCIONES -> PRODDO_WHILE
Rule 37    INSTRUCCIONES -> PRODWHILE
Rule 38    INSTRUCCIONES -> PRODVOID
Rule 39    DECLARACION -> TIPO_DATO id operador_igual DATO punto_coma
Rule 40    ASINGACION -> id operador_igual DATO punto_coma
Rule 41    TIPO_DATO -> tipo_int
Rule 42    TIPO_DATO -> tipo_double
Rule 43    TIPO_DATO -> tipo_string
Rule 44    TIPO_DATO -> tipo_char
Rule 45    TIPO_DATO -> tipo_boolean
Rule 46    DATO -> numero
Rule 47    DATO -> dato_double
Rule 48    DATO -> dato_string
Rule 49    DATO -> dato_char
Rule 50    DATO -> dato_boolean_true
Rule 51    DATO -> dato_boolean_false
Rule 52    PARAMETRO -> TIPO_DATO id
Rule 53    PARAMETROS -> PARAMETROS coma PARAMETRO
Rule 54    PARAMETROS -> PARAMETRO
Rule 55    PARAMETROS -> <empty>
Rule 56    OPERACION_FACTORIZADO -> parentesis_abre OPERACION parentesis_cierra
Rule 57    INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra
Rule 58    PARAMETROS_FACTORIZADO -> parentesis_abre PARAMETROS parentesis_cierra

Terminals, with rules where they appear

coma                 : 53
comentario_multilinea : 
comentario_unilinea  : 
corchete_abre        : 
corchete_cierra      : 
dato_boolean_false   : 51
dato_boolean_true    : 50
dato_char            : 49
dato_double          : 47
dato_string          : 48
dos_puntos           : 
error                : 
id                   : 14 15 39 40 52
llave_abre           : 57
llave_cierra         : 57
numero               : 31 46
operador_AND         : 27
operador_NOT         : 29
operador_OR          : 28
operador_diferenciacion : 22
operador_divicion    : 19
operador_igual       : 30 39 40
operador_igualacion  : 21
operador_mayor       : 23
operador_mayor_igual : 24
operador_menor       : 25
operador_menor_igual : 26
operador_multiplicacion : 18
operador_resta       : 17
operador_resto       : 20
operador_suma        : 16
parentesis_abre      : 56 58
parentesis_cierra    : 56 58
punto                : 
punto_coma           : 10 39 40
reservada_break      : 
reservada_continue   : 
reservada_do         : 10
reservada_else       : 12
reservada_fin        : 
reservada_if         : 12 13
reservada_inicio     : 
reservada_return     : 
reservada_void       : 14
reservada_while      : 10 11
tipo_boolean         : 45
tipo_char            : 44
tipo_double          : 42
tipo_int             : 41
tipo_string          : 43

Nonterminals, with rules where they appear

ASINGACION           : 33
DATO                 : 39 40
DECLARACION          : 32
ESTRUCTURA           : 2 3
INITIAL              : 1 2
INSTRUCCIONES        : 57
INSTRUCCIONES_FACTORIZADO : 10 11 12 12 13 14 15
OPERACION            : 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 56
OPERACION_FACTORIZADO : 10 11 12 13
PARAMETRO            : 53 54
PARAMETROS           : 53 58
PARAMETROS_FACTORIZADO : 14 15
PRODDO_WHILE         : 6 36
PRODFUNCION          : 9
PRODIF               : 5 35
PRODIF_ELSE          : 4 34
PRODVOID             : 8 38
PRODWHILE            : 7 37
S0                   : 0
TIPO_DATO            : 15 39 52

Parsing method: LALR

state 0

    (0) S' -> . S0
    (1) S0 -> . INITIAL
    (2) INITIAL -> . INITIAL ESTRUCTURA
    (3) INITIAL -> . ESTRUCTURA
    (4) ESTRUCTURA -> . PRODIF_ELSE
    (5) ESTRUCTURA -> . PRODIF
    (6) ESTRUCTURA -> . PRODDO_WHILE
    (7) ESTRUCTURA -> . PRODWHILE
    (8) ESTRUCTURA -> . PRODVOID
    (9) ESTRUCTURA -> . PRODFUNCION
    (12) PRODIF_ELSE -> . reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO
    (13) PRODIF -> . reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (10) PRODDO_WHILE -> . reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma
    (11) PRODWHILE -> . reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (14) PRODVOID -> . reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (15) PRODFUNCION -> . TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (41) TIPO_DATO -> . tipo_int
    (42) TIPO_DATO -> . tipo_double
    (43) TIPO_DATO -> . tipo_string
    (44) TIPO_DATO -> . tipo_char
    (45) TIPO_DATO -> . tipo_boolean

    reservada_if    shift and go to state 10
    reservada_do    shift and go to state 11
    reservada_while shift and go to state 12
    reservada_void  shift and go to state 13
    tipo_int        shift and go to state 15
    tipo_double     shift and go to state 16
    tipo_string     shift and go to state 17
    tipo_char       shift and go to state 18
    tipo_boolean    shift and go to state 19

    S0                             shift and go to state 1
    INITIAL                        shift and go to state 2
    ESTRUCTURA                     shift and go to state 3
    PRODIF_ELSE                    shift and go to state 4
    PRODIF                         shift and go to state 5
    PRODDO_WHILE                   shift and go to state 6
    PRODWHILE                      shift and go to state 7
    PRODVOID                       shift and go to state 8
    PRODFUNCION                    shift and go to state 9
    TIPO_DATO                      shift and go to state 14

state 1

    (0) S' -> S0 .



state 2

    (1) S0 -> INITIAL .
    (2) INITIAL -> INITIAL . ESTRUCTURA
    (4) ESTRUCTURA -> . PRODIF_ELSE
    (5) ESTRUCTURA -> . PRODIF
    (6) ESTRUCTURA -> . PRODDO_WHILE
    (7) ESTRUCTURA -> . PRODWHILE
    (8) ESTRUCTURA -> . PRODVOID
    (9) ESTRUCTURA -> . PRODFUNCION
    (12) PRODIF_ELSE -> . reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO
    (13) PRODIF -> . reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (10) PRODDO_WHILE -> . reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma
    (11) PRODWHILE -> . reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (14) PRODVOID -> . reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (15) PRODFUNCION -> . TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (41) TIPO_DATO -> . tipo_int
    (42) TIPO_DATO -> . tipo_double
    (43) TIPO_DATO -> . tipo_string
    (44) TIPO_DATO -> . tipo_char
    (45) TIPO_DATO -> . tipo_boolean

    $end            reduce using rule 1 (S0 -> INITIAL .)
    reservada_if    shift and go to state 10
    reservada_do    shift and go to state 11
    reservada_while shift and go to state 12
    reservada_void  shift and go to state 13
    tipo_int        shift and go to state 15
    tipo_double     shift and go to state 16
    tipo_string     shift and go to state 17
    tipo_char       shift and go to state 18
    tipo_boolean    shift and go to state 19

    ESTRUCTURA                     shift and go to state 20
    PRODIF_ELSE                    shift and go to state 4
    PRODIF                         shift and go to state 5
    PRODDO_WHILE                   shift and go to state 6
    PRODWHILE                      shift and go to state 7
    PRODVOID                       shift and go to state 8
    PRODFUNCION                    shift and go to state 9
    TIPO_DATO                      shift and go to state 14

state 3

    (3) INITIAL -> ESTRUCTURA .

    reservada_if    reduce using rule 3 (INITIAL -> ESTRUCTURA .)
    reservada_do    reduce using rule 3 (INITIAL -> ESTRUCTURA .)
    reservada_while reduce using rule 3 (INITIAL -> ESTRUCTURA .)
    reservada_void  reduce using rule 3 (INITIAL -> ESTRUCTURA .)
    tipo_int        reduce using rule 3 (INITIAL -> ESTRUCTURA .)
    tipo_double     reduce using rule 3 (INITIAL -> ESTRUCTURA .)
    tipo_string     reduce using rule 3 (INITIAL -> ESTRUCTURA .)
    tipo_char       reduce using rule 3 (INITIAL -> ESTRUCTURA .)
    tipo_boolean    reduce using rule 3 (INITIAL -> ESTRUCTURA .)
    $end            reduce using rule 3 (INITIAL -> ESTRUCTURA .)


state 4

    (4) ESTRUCTURA -> PRODIF_ELSE .

    reservada_if    reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)
    reservada_do    reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)
    reservada_while reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)
    reservada_void  reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)
    tipo_int        reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)
    tipo_double     reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)
    tipo_string     reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)
    tipo_char       reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)
    tipo_boolean    reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)
    $end            reduce using rule 4 (ESTRUCTURA -> PRODIF_ELSE .)


state 5

    (5) ESTRUCTURA -> PRODIF .

    reservada_if    reduce using rule 5 (ESTRUCTURA -> PRODIF .)
    reservada_do    reduce using rule 5 (ESTRUCTURA -> PRODIF .)
    reservada_while reduce using rule 5 (ESTRUCTURA -> PRODIF .)
    reservada_void  reduce using rule 5 (ESTRUCTURA -> PRODIF .)
    tipo_int        reduce using rule 5 (ESTRUCTURA -> PRODIF .)
    tipo_double     reduce using rule 5 (ESTRUCTURA -> PRODIF .)
    tipo_string     reduce using rule 5 (ESTRUCTURA -> PRODIF .)
    tipo_char       reduce using rule 5 (ESTRUCTURA -> PRODIF .)
    tipo_boolean    reduce using rule 5 (ESTRUCTURA -> PRODIF .)
    $end            reduce using rule 5 (ESTRUCTURA -> PRODIF .)


state 6

    (6) ESTRUCTURA -> PRODDO_WHILE .

    reservada_if    reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)
    reservada_do    reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)
    reservada_while reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)
    reservada_void  reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)
    tipo_int        reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)
    tipo_double     reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)
    tipo_string     reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)
    tipo_char       reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)
    tipo_boolean    reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)
    $end            reduce using rule 6 (ESTRUCTURA -> PRODDO_WHILE .)


state 7

    (7) ESTRUCTURA -> PRODWHILE .

    reservada_if    reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)
    reservada_do    reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)
    reservada_while reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)
    reservada_void  reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)
    tipo_int        reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)
    tipo_double     reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)
    tipo_string     reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)
    tipo_char       reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)
    tipo_boolean    reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)
    $end            reduce using rule 7 (ESTRUCTURA -> PRODWHILE .)


state 8

    (8) ESTRUCTURA -> PRODVOID .

    reservada_if    reduce using rule 8 (ESTRUCTURA -> PRODVOID .)
    reservada_do    reduce using rule 8 (ESTRUCTURA -> PRODVOID .)
    reservada_while reduce using rule 8 (ESTRUCTURA -> PRODVOID .)
    reservada_void  reduce using rule 8 (ESTRUCTURA -> PRODVOID .)
    tipo_int        reduce using rule 8 (ESTRUCTURA -> PRODVOID .)
    tipo_double     reduce using rule 8 (ESTRUCTURA -> PRODVOID .)
    tipo_string     reduce using rule 8 (ESTRUCTURA -> PRODVOID .)
    tipo_char       reduce using rule 8 (ESTRUCTURA -> PRODVOID .)
    tipo_boolean    reduce using rule 8 (ESTRUCTURA -> PRODVOID .)
    $end            reduce using rule 8 (ESTRUCTURA -> PRODVOID .)


state 9

    (9) ESTRUCTURA -> PRODFUNCION .

    reservada_if    reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)
    reservada_do    reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)
    reservada_while reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)
    reservada_void  reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)
    tipo_int        reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)
    tipo_double     reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)
    tipo_string     reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)
    tipo_char       reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)
    tipo_boolean    reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)
    $end            reduce using rule 9 (ESTRUCTURA -> PRODFUNCION .)


state 10

    (12) PRODIF_ELSE -> reservada_if . OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO
    (13) PRODIF -> reservada_if . OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (56) OPERACION_FACTORIZADO -> . parentesis_abre OPERACION parentesis_cierra

    parentesis_abre shift and go to state 22

    OPERACION_FACTORIZADO          shift and go to state 21

state 11

    (10) PRODDO_WHILE -> reservada_do . INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma
    (57) INSTRUCCIONES_FACTORIZADO -> . llave_abre INSTRUCCIONES llave_cierra

    llave_abre      shift and go to state 24

    INSTRUCCIONES_FACTORIZADO      shift and go to state 23

state 12

    (11) PRODWHILE -> reservada_while . OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (56) OPERACION_FACTORIZADO -> . parentesis_abre OPERACION parentesis_cierra

    parentesis_abre shift and go to state 22

    OPERACION_FACTORIZADO          shift and go to state 25

state 13

    (14) PRODVOID -> reservada_void . id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO

    id              shift and go to state 26


state 14

    (15) PRODFUNCION -> TIPO_DATO . id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO

    id              shift and go to state 27


state 15

    (41) TIPO_DATO -> tipo_int .

    id              reduce using rule 41 (TIPO_DATO -> tipo_int .)


state 16

    (42) TIPO_DATO -> tipo_double .

    id              reduce using rule 42 (TIPO_DATO -> tipo_double .)


state 17

    (43) TIPO_DATO -> tipo_string .

    id              reduce using rule 43 (TIPO_DATO -> tipo_string .)


state 18

    (44) TIPO_DATO -> tipo_char .

    id              reduce using rule 44 (TIPO_DATO -> tipo_char .)


state 19

    (45) TIPO_DATO -> tipo_boolean .

    id              reduce using rule 45 (TIPO_DATO -> tipo_boolean .)


state 20

    (2) INITIAL -> INITIAL ESTRUCTURA .

    reservada_if    reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)
    reservada_do    reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)
    reservada_while reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)
    reservada_void  reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)
    tipo_int        reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)
    tipo_double     reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)
    tipo_string     reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)
    tipo_char       reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)
    tipo_boolean    reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)
    $end            reduce using rule 2 (INITIAL -> INITIAL ESTRUCTURA .)


state 21

    (12) PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO . INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO
    (13) PRODIF -> reservada_if OPERACION_FACTORIZADO . INSTRUCCIONES_FACTORIZADO
    (57) INSTRUCCIONES_FACTORIZADO -> . llave_abre INSTRUCCIONES llave_cierra

    llave_abre      shift and go to state 24

    INSTRUCCIONES_FACTORIZADO      shift and go to state 28

state 22

    (56) OPERACION_FACTORIZADO -> parentesis_abre . OPERACION parentesis_cierra
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 29

state 23

    (10) PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO . reservada_while OPERACION_FACTORIZADO punto_coma

    reservada_while shift and go to state 31


state 24

    (57) INSTRUCCIONES_FACTORIZADO -> llave_abre . INSTRUCCIONES llave_cierra
    (32) INSTRUCCIONES -> . DECLARACION
    (33) INSTRUCCIONES -> . ASINGACION
    (34) INSTRUCCIONES -> . PRODIF_ELSE
    (35) INSTRUCCIONES -> . PRODIF
    (36) INSTRUCCIONES -> . PRODDO_WHILE
    (37) INSTRUCCIONES -> . PRODWHILE
    (38) INSTRUCCIONES -> . PRODVOID
    (39) DECLARACION -> . TIPO_DATO id operador_igual DATO punto_coma
    (40) ASINGACION -> . id operador_igual DATO punto_coma
    (12) PRODIF_ELSE -> . reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO
    (13) PRODIF -> . reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (10) PRODDO_WHILE -> . reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma
    (11) PRODWHILE -> . reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (14) PRODVOID -> . reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (41) TIPO_DATO -> . tipo_int
    (42) TIPO_DATO -> . tipo_double
    (43) TIPO_DATO -> . tipo_string
    (44) TIPO_DATO -> . tipo_char
    (45) TIPO_DATO -> . tipo_boolean

    id              shift and go to state 41
    reservada_if    shift and go to state 10
    reservada_do    shift and go to state 11
    reservada_while shift and go to state 12
    reservada_void  shift and go to state 13
    tipo_int        shift and go to state 15
    tipo_double     shift and go to state 16
    tipo_string     shift and go to state 17
    tipo_char       shift and go to state 18
    tipo_boolean    shift and go to state 19

    INSTRUCCIONES                  shift and go to state 32
    DECLARACION                    shift and go to state 33
    ASINGACION                     shift and go to state 34
    PRODIF_ELSE                    shift and go to state 35
    PRODIF                         shift and go to state 36
    PRODDO_WHILE                   shift and go to state 37
    PRODWHILE                      shift and go to state 38
    PRODVOID                       shift and go to state 39
    TIPO_DATO                      shift and go to state 40

state 25

    (11) PRODWHILE -> reservada_while OPERACION_FACTORIZADO . INSTRUCCIONES_FACTORIZADO
    (57) INSTRUCCIONES_FACTORIZADO -> . llave_abre INSTRUCCIONES llave_cierra

    llave_abre      shift and go to state 24

    INSTRUCCIONES_FACTORIZADO      shift and go to state 42

state 26

    (14) PRODVOID -> reservada_void id . PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (58) PARAMETROS_FACTORIZADO -> . parentesis_abre PARAMETROS parentesis_cierra

    parentesis_abre shift and go to state 44

    PARAMETROS_FACTORIZADO         shift and go to state 43

state 27

    (15) PRODFUNCION -> TIPO_DATO id . PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO
    (58) PARAMETROS_FACTORIZADO -> . parentesis_abre PARAMETROS parentesis_cierra

    parentesis_abre shift and go to state 44

    PARAMETROS_FACTORIZADO         shift and go to state 45

state 28

    (12) PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO . reservada_else INSTRUCCIONES_FACTORIZADO
    (13) PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .

    reservada_else  shift and go to state 46
    reservada_if    reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_do    reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_while reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_void  reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_int        reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_double     reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_string     reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_char       reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_boolean    reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    $end            reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    llave_cierra    reduce using rule 13 (PRODIF -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)


state 29

    (56) OPERACION_FACTORIZADO -> parentesis_abre OPERACION . parentesis_cierra
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra shift and go to state 47
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_divicion shift and go to state 51
    operador_resto  shift and go to state 52
    operador_igualacion shift and go to state 53
    operador_diferenciacion shift and go to state 54
    operador_mayor  shift and go to state 55
    operador_mayor_igual shift and go to state 56
    operador_menor  shift and go to state 57
    operador_menor_igual shift and go to state 58
    operador_AND    shift and go to state 59
    operador_OR     shift and go to state 60
    operador_NOT    shift and go to state 61
    operador_igual  shift and go to state 62


state 30

    (31) OPERACION -> numero .

    parentesis_cierra reduce using rule 31 (OPERACION -> numero .)
    operador_suma   reduce using rule 31 (OPERACION -> numero .)
    operador_resta  reduce using rule 31 (OPERACION -> numero .)
    operador_multiplicacion reduce using rule 31 (OPERACION -> numero .)
    operador_divicion reduce using rule 31 (OPERACION -> numero .)
    operador_resto  reduce using rule 31 (OPERACION -> numero .)
    operador_igualacion reduce using rule 31 (OPERACION -> numero .)
    operador_diferenciacion reduce using rule 31 (OPERACION -> numero .)
    operador_mayor  reduce using rule 31 (OPERACION -> numero .)
    operador_mayor_igual reduce using rule 31 (OPERACION -> numero .)
    operador_menor  reduce using rule 31 (OPERACION -> numero .)
    operador_menor_igual reduce using rule 31 (OPERACION -> numero .)
    operador_AND    reduce using rule 31 (OPERACION -> numero .)
    operador_OR     reduce using rule 31 (OPERACION -> numero .)
    operador_NOT    reduce using rule 31 (OPERACION -> numero .)
    operador_igual  reduce using rule 31 (OPERACION -> numero .)


state 31

    (10) PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while . OPERACION_FACTORIZADO punto_coma
    (56) OPERACION_FACTORIZADO -> . parentesis_abre OPERACION parentesis_cierra

    parentesis_abre shift and go to state 22

    OPERACION_FACTORIZADO          shift and go to state 63

state 32

    (57) INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES . llave_cierra

    llave_cierra    shift and go to state 64


state 33

    (32) INSTRUCCIONES -> DECLARACION .

    llave_cierra    reduce using rule 32 (INSTRUCCIONES -> DECLARACION .)


state 34

    (33) INSTRUCCIONES -> ASINGACION .

    llave_cierra    reduce using rule 33 (INSTRUCCIONES -> ASINGACION .)


state 35

    (34) INSTRUCCIONES -> PRODIF_ELSE .

    llave_cierra    reduce using rule 34 (INSTRUCCIONES -> PRODIF_ELSE .)


state 36

    (35) INSTRUCCIONES -> PRODIF .

    llave_cierra    reduce using rule 35 (INSTRUCCIONES -> PRODIF .)


state 37

    (36) INSTRUCCIONES -> PRODDO_WHILE .

    llave_cierra    reduce using rule 36 (INSTRUCCIONES -> PRODDO_WHILE .)


state 38

    (37) INSTRUCCIONES -> PRODWHILE .

    llave_cierra    reduce using rule 37 (INSTRUCCIONES -> PRODWHILE .)


state 39

    (38) INSTRUCCIONES -> PRODVOID .

    llave_cierra    reduce using rule 38 (INSTRUCCIONES -> PRODVOID .)


state 40

    (39) DECLARACION -> TIPO_DATO . id operador_igual DATO punto_coma

    id              shift and go to state 65


state 41

    (40) ASINGACION -> id . operador_igual DATO punto_coma

    operador_igual  shift and go to state 66


state 42

    (11) PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .

    reservada_if    reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_do    reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_while reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_void  reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_int        reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_double     reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_string     reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_char       reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_boolean    reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    $end            reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    llave_cierra    reduce using rule 11 (PRODWHILE -> reservada_while OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)


state 43

    (14) PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO . INSTRUCCIONES_FACTORIZADO
    (57) INSTRUCCIONES_FACTORIZADO -> . llave_abre INSTRUCCIONES llave_cierra

    llave_abre      shift and go to state 24

    INSTRUCCIONES_FACTORIZADO      shift and go to state 67

state 44

    (58) PARAMETROS_FACTORIZADO -> parentesis_abre . PARAMETROS parentesis_cierra
    (53) PARAMETROS -> . PARAMETROS coma PARAMETRO
    (54) PARAMETROS -> . PARAMETRO
    (55) PARAMETROS -> .
    (52) PARAMETRO -> . TIPO_DATO id
    (41) TIPO_DATO -> . tipo_int
    (42) TIPO_DATO -> . tipo_double
    (43) TIPO_DATO -> . tipo_string
    (44) TIPO_DATO -> . tipo_char
    (45) TIPO_DATO -> . tipo_boolean

    parentesis_cierra reduce using rule 55 (PARAMETROS -> .)
    coma            reduce using rule 55 (PARAMETROS -> .)
    tipo_int        shift and go to state 15
    tipo_double     shift and go to state 16
    tipo_string     shift and go to state 17
    tipo_char       shift and go to state 18
    tipo_boolean    shift and go to state 19

    PARAMETROS                     shift and go to state 68
    PARAMETRO                      shift and go to state 69
    TIPO_DATO                      shift and go to state 70

state 45

    (15) PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO . INSTRUCCIONES_FACTORIZADO
    (57) INSTRUCCIONES_FACTORIZADO -> . llave_abre INSTRUCCIONES llave_cierra

    llave_abre      shift and go to state 24

    INSTRUCCIONES_FACTORIZADO      shift and go to state 71

state 46

    (12) PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else . INSTRUCCIONES_FACTORIZADO
    (57) INSTRUCCIONES_FACTORIZADO -> . llave_abre INSTRUCCIONES llave_cierra

    llave_abre      shift and go to state 24

    INSTRUCCIONES_FACTORIZADO      shift and go to state 72

state 47

    (56) OPERACION_FACTORIZADO -> parentesis_abre OPERACION parentesis_cierra .

    llave_abre      reduce using rule 56 (OPERACION_FACTORIZADO -> parentesis_abre OPERACION parentesis_cierra .)
    punto_coma      reduce using rule 56 (OPERACION_FACTORIZADO -> parentesis_abre OPERACION parentesis_cierra .)


state 48

    (16) OPERACION -> OPERACION operador_suma . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 73

state 49

    (17) OPERACION -> OPERACION operador_resta . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 74

state 50

    (18) OPERACION -> OPERACION operador_multiplicacion . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 75

state 51

    (19) OPERACION -> OPERACION operador_divicion . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 76

state 52

    (20) OPERACION -> OPERACION operador_resto . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 77

state 53

    (21) OPERACION -> OPERACION operador_igualacion . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 78

state 54

    (22) OPERACION -> OPERACION operador_diferenciacion . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 79

state 55

    (23) OPERACION -> OPERACION operador_mayor . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 80

state 56

    (24) OPERACION -> OPERACION operador_mayor_igual . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 81

state 57

    (25) OPERACION -> OPERACION operador_menor . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 82

state 58

    (26) OPERACION -> OPERACION operador_menor_igual . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 83

state 59

    (27) OPERACION -> OPERACION operador_AND . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 84

state 60

    (28) OPERACION -> OPERACION operador_OR . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 85

state 61

    (29) OPERACION -> OPERACION operador_NOT . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 86

state 62

    (30) OPERACION -> OPERACION operador_igual . OPERACION
    (16) OPERACION -> . OPERACION operador_suma OPERACION
    (17) OPERACION -> . OPERACION operador_resta OPERACION
    (18) OPERACION -> . OPERACION operador_multiplicacion OPERACION
    (19) OPERACION -> . OPERACION operador_divicion OPERACION
    (20) OPERACION -> . OPERACION operador_resto OPERACION
    (21) OPERACION -> . OPERACION operador_igualacion OPERACION
    (22) OPERACION -> . OPERACION operador_diferenciacion OPERACION
    (23) OPERACION -> . OPERACION operador_mayor OPERACION
    (24) OPERACION -> . OPERACION operador_mayor_igual OPERACION
    (25) OPERACION -> . OPERACION operador_menor OPERACION
    (26) OPERACION -> . OPERACION operador_menor_igual OPERACION
    (27) OPERACION -> . OPERACION operador_AND OPERACION
    (28) OPERACION -> . OPERACION operador_OR OPERACION
    (29) OPERACION -> . OPERACION operador_NOT OPERACION
    (30) OPERACION -> . OPERACION operador_igual OPERACION
    (31) OPERACION -> . numero

    numero          shift and go to state 30

    OPERACION                      shift and go to state 87

state 63

    (10) PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO . punto_coma

    punto_coma      shift and go to state 88


state 64

    (57) INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .

    reservada_while reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    reservada_else  reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    reservada_if    reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    reservada_do    reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    reservada_void  reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    tipo_int        reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    tipo_double     reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    tipo_string     reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    tipo_char       reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    tipo_boolean    reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    $end            reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)
    llave_cierra    reduce using rule 57 (INSTRUCCIONES_FACTORIZADO -> llave_abre INSTRUCCIONES llave_cierra .)


state 65

    (39) DECLARACION -> TIPO_DATO id . operador_igual DATO punto_coma

    operador_igual  shift and go to state 89


state 66

    (40) ASINGACION -> id operador_igual . DATO punto_coma
    (46) DATO -> . numero
    (47) DATO -> . dato_double
    (48) DATO -> . dato_string
    (49) DATO -> . dato_char
    (50) DATO -> . dato_boolean_true
    (51) DATO -> . dato_boolean_false

    numero          shift and go to state 91
    dato_double     shift and go to state 92
    dato_string     shift and go to state 93
    dato_char       shift and go to state 94
    dato_boolean_true shift and go to state 95
    dato_boolean_false shift and go to state 96

    DATO                           shift and go to state 90

state 67

    (14) PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .

    reservada_if    reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_do    reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_while reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_void  reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_int        reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_double     reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_string     reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_char       reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_boolean    reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    $end            reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    llave_cierra    reduce using rule 14 (PRODVOID -> reservada_void id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)


state 68

    (58) PARAMETROS_FACTORIZADO -> parentesis_abre PARAMETROS . parentesis_cierra
    (53) PARAMETROS -> PARAMETROS . coma PARAMETRO

    parentesis_cierra shift and go to state 97
    coma            shift and go to state 98


state 69

    (54) PARAMETROS -> PARAMETRO .

    parentesis_cierra reduce using rule 54 (PARAMETROS -> PARAMETRO .)
    coma            reduce using rule 54 (PARAMETROS -> PARAMETRO .)


state 70

    (52) PARAMETRO -> TIPO_DATO . id

    id              shift and go to state 99


state 71

    (15) PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .

    reservada_if    reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_do    reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_while reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    reservada_void  reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_int        reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_double     reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_string     reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_char       reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    tipo_boolean    reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)
    $end            reduce using rule 15 (PRODFUNCION -> TIPO_DATO id PARAMETROS_FACTORIZADO INSTRUCCIONES_FACTORIZADO .)


state 72

    (12) PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .

    reservada_if    reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    reservada_do    reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    reservada_while reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    reservada_void  reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    tipo_int        reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    tipo_double     reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    tipo_string     reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    tipo_char       reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    tipo_boolean    reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    $end            reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)
    llave_cierra    reduce using rule 12 (PRODIF_ELSE -> reservada_if OPERACION_FACTORIZADO INSTRUCCIONES_FACTORIZADO reservada_else INSTRUCCIONES_FACTORIZADO .)


state 73

    (16) OPERACION -> OPERACION operador_suma OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_suma   reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_resta  reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_divicion reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_igualacion reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_diferenciacion reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_mayor  reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_mayor_igual reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_menor  reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_menor_igual reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_AND    reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_OR     reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_igual  reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .)
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_NOT    shift and go to state 61

  ! operador_multiplicacion [ reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .) ]
  ! operador_resto  [ reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .) ]
  ! operador_NOT    [ reduce using rule 16 (OPERACION -> OPERACION operador_suma OPERACION .) ]
  ! operador_suma   [ shift and go to state 48 ]
  ! operador_resta  [ shift and go to state 49 ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_mayor  [ shift and go to state 55 ]
  ! operador_mayor_igual [ shift and go to state 56 ]
  ! operador_menor  [ shift and go to state 57 ]
  ! operador_menor_igual [ shift and go to state 58 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 74

    (17) OPERACION -> OPERACION operador_resta OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_suma   reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_resta  reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_divicion reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_igualacion reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_diferenciacion reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_mayor  reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_mayor_igual reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_menor  reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_menor_igual reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_AND    reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_OR     reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_igual  reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .)
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_NOT    shift and go to state 61

  ! operador_multiplicacion [ reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .) ]
  ! operador_resto  [ reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .) ]
  ! operador_NOT    [ reduce using rule 17 (OPERACION -> OPERACION operador_resta OPERACION .) ]
  ! operador_suma   [ shift and go to state 48 ]
  ! operador_resta  [ shift and go to state 49 ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_mayor  [ shift and go to state 55 ]
  ! operador_mayor_igual [ shift and go to state 56 ]
  ! operador_menor  [ shift and go to state 57 ]
  ! operador_menor_igual [ shift and go to state 58 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 75

    (18) OPERACION -> OPERACION operador_multiplicacion OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_suma   reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_resta  reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_multiplicacion reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_divicion reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_resto  reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_igualacion reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_diferenciacion reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_mayor  reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_mayor_igual reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_menor  reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_menor_igual reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_AND    reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_OR     reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_igual  reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .)
    operador_NOT    shift and go to state 61

  ! operador_NOT    [ reduce using rule 18 (OPERACION -> OPERACION operador_multiplicacion OPERACION .) ]
  ! operador_suma   [ shift and go to state 48 ]
  ! operador_resta  [ shift and go to state 49 ]
  ! operador_multiplicacion [ shift and go to state 50 ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_resto  [ shift and go to state 52 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_mayor  [ shift and go to state 55 ]
  ! operador_mayor_igual [ shift and go to state 56 ]
  ! operador_menor  [ shift and go to state 57 ]
  ! operador_menor_igual [ shift and go to state 58 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 76

    (19) OPERACION -> OPERACION operador_divicion OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

  ! shift/reduce conflict for operador_suma resolved as shift
  ! shift/reduce conflict for operador_resta resolved as shift
  ! shift/reduce conflict for operador_multiplicacion resolved as shift
  ! shift/reduce conflict for operador_divicion resolved as shift
  ! shift/reduce conflict for operador_resto resolved as shift
  ! shift/reduce conflict for operador_igualacion resolved as shift
  ! shift/reduce conflict for operador_diferenciacion resolved as shift
  ! shift/reduce conflict for operador_mayor resolved as shift
  ! shift/reduce conflict for operador_mayor_igual resolved as shift
  ! shift/reduce conflict for operador_menor resolved as shift
  ! shift/reduce conflict for operador_menor_igual resolved as shift
  ! shift/reduce conflict for operador_AND resolved as shift
  ! shift/reduce conflict for operador_OR resolved as shift
  ! shift/reduce conflict for operador_NOT resolved as shift
  ! shift/reduce conflict for operador_igual resolved as shift
    parentesis_cierra reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_divicion shift and go to state 51
    operador_resto  shift and go to state 52
    operador_igualacion shift and go to state 53
    operador_diferenciacion shift and go to state 54
    operador_mayor  shift and go to state 55
    operador_mayor_igual shift and go to state 56
    operador_menor  shift and go to state 57
    operador_menor_igual shift and go to state 58
    operador_AND    shift and go to state 59
    operador_OR     shift and go to state 60
    operador_NOT    shift and go to state 61
    operador_igual  shift and go to state 62

  ! operador_suma   [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_resta  [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_divicion [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_resto  [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_igualacion [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_diferenciacion [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_mayor  [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_mayor_igual [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_menor  [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_menor_igual [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_AND    [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_OR     [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_NOT    [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]
  ! operador_igual  [ reduce using rule 19 (OPERACION -> OPERACION operador_divicion OPERACION .) ]


state 77

    (20) OPERACION -> OPERACION operador_resto OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_suma   reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_resta  reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_multiplicacion reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_divicion reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_resto  reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_igualacion reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_diferenciacion reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_mayor  reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_mayor_igual reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_menor  reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_menor_igual reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_AND    reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_OR     reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_igual  reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .)
    operador_NOT    shift and go to state 61

  ! operador_NOT    [ reduce using rule 20 (OPERACION -> OPERACION operador_resto OPERACION .) ]
  ! operador_suma   [ shift and go to state 48 ]
  ! operador_resta  [ shift and go to state 49 ]
  ! operador_multiplicacion [ shift and go to state 50 ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_resto  [ shift and go to state 52 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_mayor  [ shift and go to state 55 ]
  ! operador_mayor_igual [ shift and go to state 56 ]
  ! operador_menor  [ shift and go to state 57 ]
  ! operador_menor_igual [ shift and go to state 58 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 78

    (21) OPERACION -> OPERACION operador_igualacion OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .)
    operador_divicion reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .)
    operador_igualacion reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .)
    operador_diferenciacion reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .)
    operador_AND    reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .)
    operador_OR     reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .)
    operador_igual  reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_mayor  shift and go to state 55
    operador_mayor_igual shift and go to state 56
    operador_menor  shift and go to state 57
    operador_menor_igual shift and go to state 58
    operador_NOT    shift and go to state 61

  ! operador_suma   [ reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .) ]
  ! operador_resta  [ reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .) ]
  ! operador_resto  [ reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .) ]
  ! operador_mayor  [ reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .) ]
  ! operador_mayor_igual [ reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .) ]
  ! operador_menor  [ reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .) ]
  ! operador_menor_igual [ reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .) ]
  ! operador_NOT    [ reduce using rule 21 (OPERACION -> OPERACION operador_igualacion OPERACION .) ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 79

    (22) OPERACION -> OPERACION operador_diferenciacion OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .)
    operador_divicion reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .)
    operador_igualacion reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .)
    operador_diferenciacion reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .)
    operador_AND    reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .)
    operador_OR     reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .)
    operador_igual  reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_mayor  shift and go to state 55
    operador_mayor_igual shift and go to state 56
    operador_menor  shift and go to state 57
    operador_menor_igual shift and go to state 58
    operador_NOT    shift and go to state 61

  ! operador_suma   [ reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .) ]
  ! operador_resta  [ reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .) ]
  ! operador_resto  [ reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .) ]
  ! operador_mayor  [ reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .) ]
  ! operador_mayor_igual [ reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .) ]
  ! operador_menor  [ reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .) ]
  ! operador_menor_igual [ reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .) ]
  ! operador_NOT    [ reduce using rule 22 (OPERACION -> OPERACION operador_diferenciacion OPERACION .) ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 80

    (23) OPERACION -> OPERACION operador_mayor OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_divicion reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_igualacion reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_diferenciacion reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_mayor  reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_mayor_igual reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_menor  reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_menor_igual reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_AND    reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_OR     reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_igual  reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_NOT    shift and go to state 61

  ! operador_suma   [ reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .) ]
  ! operador_resta  [ reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .) ]
  ! operador_resto  [ reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .) ]
  ! operador_NOT    [ reduce using rule 23 (OPERACION -> OPERACION operador_mayor OPERACION .) ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_mayor  [ shift and go to state 55 ]
  ! operador_mayor_igual [ shift and go to state 56 ]
  ! operador_menor  [ shift and go to state 57 ]
  ! operador_menor_igual [ shift and go to state 58 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 81

    (24) OPERACION -> OPERACION operador_mayor_igual OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_divicion reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_igualacion reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_diferenciacion reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_mayor  reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_mayor_igual reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_menor  reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_menor_igual reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_AND    reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_OR     reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_igual  reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_NOT    shift and go to state 61

  ! operador_suma   [ reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .) ]
  ! operador_resta  [ reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .) ]
  ! operador_resto  [ reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .) ]
  ! operador_NOT    [ reduce using rule 24 (OPERACION -> OPERACION operador_mayor_igual OPERACION .) ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_mayor  [ shift and go to state 55 ]
  ! operador_mayor_igual [ shift and go to state 56 ]
  ! operador_menor  [ shift and go to state 57 ]
  ! operador_menor_igual [ shift and go to state 58 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 82

    (25) OPERACION -> OPERACION operador_menor OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_divicion reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_igualacion reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_diferenciacion reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_mayor  reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_mayor_igual reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_menor  reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_menor_igual reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_AND    reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_OR     reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_igual  reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_NOT    shift and go to state 61

  ! operador_suma   [ reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .) ]
  ! operador_resta  [ reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .) ]
  ! operador_resto  [ reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .) ]
  ! operador_NOT    [ reduce using rule 25 (OPERACION -> OPERACION operador_menor OPERACION .) ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_mayor  [ shift and go to state 55 ]
  ! operador_mayor_igual [ shift and go to state 56 ]
  ! operador_menor  [ shift and go to state 57 ]
  ! operador_menor_igual [ shift and go to state 58 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 83

    (26) OPERACION -> OPERACION operador_menor_igual OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_divicion reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_igualacion reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_diferenciacion reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_mayor  reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_mayor_igual reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_menor  reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_menor_igual reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_AND    reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_OR     reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_igual  reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_NOT    shift and go to state 61

  ! operador_suma   [ reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .) ]
  ! operador_resta  [ reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .) ]
  ! operador_resto  [ reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .) ]
  ! operador_NOT    [ reduce using rule 26 (OPERACION -> OPERACION operador_menor_igual OPERACION .) ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_mayor  [ shift and go to state 55 ]
  ! operador_mayor_igual [ shift and go to state 56 ]
  ! operador_menor  [ shift and go to state 57 ]
  ! operador_menor_igual [ shift and go to state 58 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 84

    (27) OPERACION -> OPERACION operador_AND OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .)
    operador_divicion reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .)
    operador_AND    reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .)
    operador_OR     reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .)
    operador_igual  reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_igualacion shift and go to state 53
    operador_diferenciacion shift and go to state 54
    operador_mayor  shift and go to state 55
    operador_mayor_igual shift and go to state 56
    operador_menor  shift and go to state 57
    operador_menor_igual shift and go to state 58
    operador_NOT    shift and go to state 61

  ! operador_suma   [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_resta  [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_resto  [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_igualacion [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_diferenciacion [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_mayor  [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_mayor_igual [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_menor  [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_menor_igual [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_NOT    [ reduce using rule 27 (OPERACION -> OPERACION operador_AND OPERACION .) ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 85

    (28) OPERACION -> OPERACION operador_OR OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .)
    operador_divicion reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .)
    operador_OR     reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .)
    operador_igual  reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_resto  shift and go to state 52
    operador_igualacion shift and go to state 53
    operador_diferenciacion shift and go to state 54
    operador_mayor  shift and go to state 55
    operador_mayor_igual shift and go to state 56
    operador_menor  shift and go to state 57
    operador_menor_igual shift and go to state 58
    operador_AND    shift and go to state 59
    operador_NOT    shift and go to state 61

  ! operador_suma   [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_resta  [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_resto  [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_igualacion [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_diferenciacion [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_mayor  [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_mayor_igual [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_menor  [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_menor_igual [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_AND    [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_NOT    [ reduce using rule 28 (OPERACION -> OPERACION operador_OR OPERACION .) ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 86

    (29) OPERACION -> OPERACION operador_NOT OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

    parentesis_cierra reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_suma   reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_resta  reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_multiplicacion reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_divicion reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_resto  reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_igualacion reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_diferenciacion reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_mayor  reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_mayor_igual reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_menor  reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_menor_igual reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_AND    reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_OR     reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_igual  reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .)
    operador_NOT    shift and go to state 61

  ! operador_NOT    [ reduce using rule 29 (OPERACION -> OPERACION operador_NOT OPERACION .) ]
  ! operador_suma   [ shift and go to state 48 ]
  ! operador_resta  [ shift and go to state 49 ]
  ! operador_multiplicacion [ shift and go to state 50 ]
  ! operador_divicion [ shift and go to state 51 ]
  ! operador_resto  [ shift and go to state 52 ]
  ! operador_igualacion [ shift and go to state 53 ]
  ! operador_diferenciacion [ shift and go to state 54 ]
  ! operador_mayor  [ shift and go to state 55 ]
  ! operador_mayor_igual [ shift and go to state 56 ]
  ! operador_menor  [ shift and go to state 57 ]
  ! operador_menor_igual [ shift and go to state 58 ]
  ! operador_AND    [ shift and go to state 59 ]
  ! operador_OR     [ shift and go to state 60 ]
  ! operador_igual  [ shift and go to state 62 ]


state 87

    (30) OPERACION -> OPERACION operador_igual OPERACION .
    (16) OPERACION -> OPERACION . operador_suma OPERACION
    (17) OPERACION -> OPERACION . operador_resta OPERACION
    (18) OPERACION -> OPERACION . operador_multiplicacion OPERACION
    (19) OPERACION -> OPERACION . operador_divicion OPERACION
    (20) OPERACION -> OPERACION . operador_resto OPERACION
    (21) OPERACION -> OPERACION . operador_igualacion OPERACION
    (22) OPERACION -> OPERACION . operador_diferenciacion OPERACION
    (23) OPERACION -> OPERACION . operador_mayor OPERACION
    (24) OPERACION -> OPERACION . operador_mayor_igual OPERACION
    (25) OPERACION -> OPERACION . operador_menor OPERACION
    (26) OPERACION -> OPERACION . operador_menor_igual OPERACION
    (27) OPERACION -> OPERACION . operador_AND OPERACION
    (28) OPERACION -> OPERACION . operador_OR OPERACION
    (29) OPERACION -> OPERACION . operador_NOT OPERACION
    (30) OPERACION -> OPERACION . operador_igual OPERACION

  ! shift/reduce conflict for operador_suma resolved as shift
  ! shift/reduce conflict for operador_resta resolved as shift
  ! shift/reduce conflict for operador_multiplicacion resolved as shift
  ! shift/reduce conflict for operador_divicion resolved as shift
  ! shift/reduce conflict for operador_resto resolved as shift
  ! shift/reduce conflict for operador_igualacion resolved as shift
  ! shift/reduce conflict for operador_diferenciacion resolved as shift
  ! shift/reduce conflict for operador_mayor resolved as shift
  ! shift/reduce conflict for operador_mayor_igual resolved as shift
  ! shift/reduce conflict for operador_menor resolved as shift
  ! shift/reduce conflict for operador_menor_igual resolved as shift
  ! shift/reduce conflict for operador_AND resolved as shift
  ! shift/reduce conflict for operador_OR resolved as shift
  ! shift/reduce conflict for operador_NOT resolved as shift
  ! shift/reduce conflict for operador_igual resolved as shift
    parentesis_cierra reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .)
    operador_suma   shift and go to state 48
    operador_resta  shift and go to state 49
    operador_multiplicacion shift and go to state 50
    operador_divicion shift and go to state 51
    operador_resto  shift and go to state 52
    operador_igualacion shift and go to state 53
    operador_diferenciacion shift and go to state 54
    operador_mayor  shift and go to state 55
    operador_mayor_igual shift and go to state 56
    operador_menor  shift and go to state 57
    operador_menor_igual shift and go to state 58
    operador_AND    shift and go to state 59
    operador_OR     shift and go to state 60
    operador_NOT    shift and go to state 61
    operador_igual  shift and go to state 62

  ! operador_suma   [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_resta  [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_multiplicacion [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_divicion [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_resto  [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_igualacion [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_diferenciacion [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_mayor  [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_mayor_igual [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_menor  [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_menor_igual [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_AND    [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_OR     [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_NOT    [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]
  ! operador_igual  [ reduce using rule 30 (OPERACION -> OPERACION operador_igual OPERACION .) ]


state 88

    (10) PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .

    reservada_if    reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    reservada_do    reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    reservada_while reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    reservada_void  reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    tipo_int        reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    tipo_double     reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    tipo_string     reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    tipo_char       reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    tipo_boolean    reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    $end            reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)
    llave_cierra    reduce using rule 10 (PRODDO_WHILE -> reservada_do INSTRUCCIONES_FACTORIZADO reservada_while OPERACION_FACTORIZADO punto_coma .)


state 89

    (39) DECLARACION -> TIPO_DATO id operador_igual . DATO punto_coma
    (46) DATO -> . numero
    (47) DATO -> . dato_double
    (48) DATO -> . dato_string
    (49) DATO -> . dato_char
    (50) DATO -> . dato_boolean_true
    (51) DATO -> . dato_boolean_false

    numero          shift and go to state 91
    dato_double     shift and go to state 92
    dato_string     shift and go to state 93
    dato_char       shift and go to state 94
    dato_boolean_true shift and go to state 95
    dato_boolean_false shift and go to state 96

    DATO                           shift and go to state 100

state 90

    (40) ASINGACION -> id operador_igual DATO . punto_coma

    punto_coma      shift and go to state 101


state 91

    (46) DATO -> numero .

    punto_coma      reduce using rule 46 (DATO -> numero .)


state 92

    (47) DATO -> dato_double .

    punto_coma      reduce using rule 47 (DATO -> dato_double .)


state 93

    (48) DATO -> dato_string .

    punto_coma      reduce using rule 48 (DATO -> dato_string .)


state 94

    (49) DATO -> dato_char .

    punto_coma      reduce using rule 49 (DATO -> dato_char .)


state 95

    (50) DATO -> dato_boolean_true .

    punto_coma      reduce using rule 50 (DATO -> dato_boolean_true .)


state 96

    (51) DATO -> dato_boolean_false .

    punto_coma      reduce using rule 51 (DATO -> dato_boolean_false .)


state 97

    (58) PARAMETROS_FACTORIZADO -> parentesis_abre PARAMETROS parentesis_cierra .

    llave_abre      reduce using rule 58 (PARAMETROS_FACTORIZADO -> parentesis_abre PARAMETROS parentesis_cierra .)


state 98

    (53) PARAMETROS -> PARAMETROS coma . PARAMETRO
    (52) PARAMETRO -> . TIPO_DATO id
    (41) TIPO_DATO -> . tipo_int
    (42) TIPO_DATO -> . tipo_double
    (43) TIPO_DATO -> . tipo_string
    (44) TIPO_DATO -> . tipo_char
    (45) TIPO_DATO -> . tipo_boolean

    tipo_int        shift and go to state 15
    tipo_double     shift and go to state 16
    tipo_string     shift and go to state 17
    tipo_char       shift and go to state 18
    tipo_boolean    shift and go to state 19

    PARAMETRO                      shift and go to state 102
    TIPO_DATO                      shift and go to state 70

state 99

    (52) PARAMETRO -> TIPO_DATO id .

    parentesis_cierra reduce using rule 52 (PARAMETRO -> TIPO_DATO id .)
    coma            reduce using rule 52 (PARAMETRO -> TIPO_DATO id .)


state 100

    (39) DECLARACION -> TIPO_DATO id operador_igual DATO . punto_coma

    punto_coma      shift and go to state 103


state 101

    (40) ASINGACION -> id operador_igual DATO punto_coma .

    llave_cierra    reduce using rule 40 (ASINGACION -> id operador_igual DATO punto_coma .)


state 102

    (53) PARAMETROS -> PARAMETROS coma PARAMETRO .

    parentesis_cierra reduce using rule 53 (PARAMETROS -> PARAMETROS coma PARAMETRO .)
    coma            reduce using rule 53 (PARAMETROS -> PARAMETROS coma PARAMETRO .)


state 103

    (39) DECLARACION -> TIPO_DATO id operador_igual DATO punto_coma .

    llave_cierra    reduce using rule 39 (DECLARACION -> TIPO_DATO id operador_igual DATO punto_coma .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for operador_suma in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_resta in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_multiplicacion in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_divicion in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_resto in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_igualacion in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_diferenciacion in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_mayor in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_mayor_igual in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_menor in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_menor_igual in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_AND in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_OR in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_NOT in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_igual in state 76 resolved as shift
WARNING: shift/reduce conflict for operador_suma in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_resta in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_multiplicacion in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_divicion in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_resto in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_igualacion in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_diferenciacion in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_mayor in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_mayor_igual in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_menor in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_menor_igual in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_AND in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_OR in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_NOT in state 87 resolved as shift
WARNING: shift/reduce conflict for operador_igual in state 87 resolved as shift
